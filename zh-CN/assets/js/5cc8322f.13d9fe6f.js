"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2320],{3905:function(e,t,a){a.d(t,{Zo:function(){return k},kt:function(){return s}});var n=a(7294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function p(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?p(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):p(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},p=Object.keys(e);for(n=0;n<p.length;n++)a=p[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(n=0;n<p.length;n++)a=p[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var m=n.createContext({}),N=function(e){var t=n.useContext(m),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},k=function(e){var t=N(e.components);return n.createElement(m.Provider,{value:t},e.children)},o={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,p=e.originalType,m=e.parentName,k=i(e,["components","mdxType","originalType","parentName"]),u=N(a),s=l,d=u["".concat(m,".").concat(s)]||u[s]||o[s]||p;return a?n.createElement(d,r(r({ref:t},k),{},{components:a})):n.createElement(d,r({ref:t},k))}));function s(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var p=a.length,r=new Array(p);r[0]=u;var i={};for(var m in t)hasOwnProperty.call(t,m)&&(i[m]=t[m]);i.originalType=e,i.mdxType="string"==typeof e?e:l,r[1]=i;for(var N=2;N<p;N++)r[N]=a[N];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},8748:function(e,t,a){a.r(t),a.d(t,{contentTitle:function(){return m},default:function(){return u},frontMatter:function(){return i},metadata:function(){return N},toc:function(){return k}});var n=a(7462),l=a(3366),p=(a(7294),a(3905)),r=["components"],i={id:"Wasm_Contract_API",title:"\u5408\u7ea6API",sidebar_label:"\u5408\u7ea6API"},m=void 0,N={unversionedId:"Wasm_Contract_API",id:"Wasm_Contract_API",isDocsHomePage:!1,title:"\u5408\u7ea6API",description:"API",source:"@site/i18n/zh-CN/docusaurus-plugin-content-docs/current/wasm\u5408\u7ea6API.md",sourceDirName:".",slug:"/Wasm_Contract_API",permalink:"/docs/zh-CN/Wasm_Contract_API",editUrl:"https://github.com/PlatONnetwork/docs/tree/master/website/i18n/zh-CN/docusaurus-plugin-content-docs/current/wasm\u5408\u7ea6API.md",version:"current",frontMatter:{id:"Wasm_Contract_API",title:"\u5408\u7ea6API",sidebar_label:"\u5408\u7ea6API"},sidebar:"docs",previous:{title:"\u6700\u4f73\u5b9e\u8df5",permalink:"/docs/zh-CN/Wasm_Contract_Best_Practice"},next:{title:"Python SDK",permalink:"/docs/zh-CN/Python_SDK"}},k=[{value:"API",id:"api",children:[{value:"\u533a\u5757Api",id:"\u533a\u5757api",children:[]},{value:"\u4ea4\u6613API",id:"\u4ea4\u6613api",children:[]},{value:"\u5e10\u6237Api",id:"\u5e10\u6237api",children:[]},{value:"\u5b58\u50a8API",id:"\u5b58\u50a8api",children:[]},{value:"\u5408\u7ea6API",id:"\u5408\u7ea6api",children:[]},{value:"\u5f02\u5e38API",id:"\u5f02\u5e38api",children:[]},{value:"\u5176\u4ed6API",id:"\u5176\u4ed6api",children:[]}]}],o={toc:k};function u(e){var t=e.components,a=(0,l.Z)(e,r);return(0,p.kt)("wrapper",(0,n.Z)({},o,a,{components:t,mdxType:"MDXLayout"}),(0,p.kt)("h2",{id:"api"},"API"),(0,p.kt)("h3",{id:"\u533a\u5757api"},"\u533a\u5757Api"),(0,p.kt)("h4",{id:"platon_block_hash"},"platon_block_hash()"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"h256 platon::platon_block_hash(int64_t num)\n")),(0,p.kt)("p",null,"\u6839\u636e\u533a\u5757\u9ad8\u5ea6\u83b7\u53d6\u533a\u5757\u54c8\u5e0c\u3002"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u53c2\u6570"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"num\uff1a"),"\u5757\u7684\u9ad8\u5ea6"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"\u54c8\u5e0c\u503c")))),(0,p.kt)("h4",{id:"platon_block_number"},"platon_block_number()"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"uint64_t platon_block_number()\n")),(0,p.kt)("p",null,"\u83b7\u53d6\u5f53\u524d\u5757\u7684\u9ad8\u5ea6\u3002"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"\u5f53\u524d\u5757\u7684\u9ad8\u5ea6")))),(0,p.kt)("h4",{id:"platon_coinbase"},"platon_coinbase()"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"Address platon::platon_coinbase()\n")),(0,p.kt)("p",null,"\u83b7\u53d6\u77ff\u5de5\u8282\u70b9\u7684\u54c8\u5e0c\u503c\u3002"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"\u77ff\u5de5\u8282\u70b9\u7684\u54c8\u5e0c")))),(0,p.kt)("h4",{id:"platon_unix_timestamp"},"platon_unix_timestamp()"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"int64_t platon::platon_unix_timestamp()\n")),(0,p.kt)("p",null,"\u83b7\u53d6\u5f53\u524d\u5757\u7684Unix\u65f6\u95f4\u6233\u3002"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"\u5f53\u524d\u5757\u7684Unix\u65f6\u95f4\u6233\uff08\u79d2\uff09")))),(0,p.kt)("h4",{id:"platon_gas_limit"},"platon_gas_limit()"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"uint64_t platon_gas_limit()\n")),(0,p.kt)("p",null,"\u83b7\u53d6\u5f53\u524d\u533a\u5757\u7684 gas limit"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"\u5f53\u524d\u533a\u5757\u7684 gas limit")))),(0,p.kt)("h3",{id:"\u4ea4\u6613api"},"\u4ea4\u6613API"),(0,p.kt)("h4",{id:"platon_gas_price"},"platon_gas_price()"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"u128 platon::platon_gas_price()\n")),(0,p.kt)("p",null,"\u83b7\u53d6\u4ea4\u6613\u7684 gas price."),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"\u4ea4\u6613\u7684 gas price")))),(0,p.kt)("h4",{id:"platon_gas"},"platon_gas()"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"uint64_t platon_gas()\n")),(0,p.kt)("p",null,"\u83b7\u53d6\u4ea4\u6613\u7684 gas \u503c"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"\u4ea4\u6613\u7684 gas \u503c")))),(0,p.kt)("h4",{id:"platon_caller_nonce"},"platon_caller_nonce"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"uint64_t platon_caller_nonce()\n")),(0,p.kt)("p",null,"\u83b7\u53d6\u4ea4\u6613\u7684 nonce \u503c"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"\u4ea4\u6613\u7684 nonce \u503c")))),(0,p.kt)("h4",{id:"platon_call_value"},"platon_call_value()"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"u128 platon::platon_call_value()\n")),(0,p.kt)("p",null,"\u83b7\u53d6\u5f53\u524d\u4ea4\u6613\u7684 value \u503c\u3002"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"\u5f53\u524d\u4ea4\u6613\u7684 value \u503c")))),(0,p.kt)("h4",{id:"platon_caller"},"platon_caller()"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"Address platon::platon_caller()\n")),(0,p.kt)("p",null,"\u83b7\u53d6\u4ea4\u6613\u7684\u53d1\u8d77\u8005"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"\u4ea4\u6613\u53d1\u8d77\u8005\u5730\u5740")))),(0,p.kt)("h4",{id:"platon_origin"},"platon_origin()"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"Address platon::platon_origin()\n")),(0,p.kt)("p",null,"\u83b7\u53d6\u4ea4\u6613\u7684\u539f\u59cb\u53d1\u8d77\u8005"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"\u4ea4\u6613\u539f\u59cb\u53d1\u8d77\u8005\u7684\u5730\u5740")))),(0,p.kt)("h4",{id:"platon_address"},"platon_address()"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"Address platon::platon_address()\n")),(0,p.kt)("p",null,"\u83b7\u53d6\u4ea4\u6613\u7684\u5408\u7ea6\u5730\u5740"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"\u5408\u7ea6\u5730\u5740")))),(0,p.kt)("h3",{id:"\u5e10\u6237api"},"\u5e10\u6237Api"),(0,p.kt)("h4",{id:"make_address-12"},"make_address() 1/2"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"template <size_t M> std::pair<Address, bool> make_address(const char (&str)[M])\n")),(0,p.kt)("p",null,'CDT \u9ed8\u8ba4\u8bc6\u522b\u7684\u5730\u5740\u662f\u4e3b\u7f51\u5730\u5740\u4e5f\u5c31\u662f\u5730\u5740\u524d\u7f00\u4e3alat\uff0c\u540c\u65f6\u6211\u4eec\u652f\u6301\u4ee5\u592a\u574a\u4ee5\u5730\u5740\u683c\u5f0f,\u4f8b\u5982: "0x02ea8A5273d20f3e378a56D958a684004eDD0094"'),(0,p.kt)("p",null,"\u5c06C\u98ce\u683c\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u5730\u5740\u5bf9\u8c61\u3002"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u53c2\u6570"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"str\uff1a")," C\u98ce\u683c\u5b57\u7b26\u4e32"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"\u8fd4\u56de\u503c\u4e3a pair\uff0cpair \u7684 second \u8868\u793a\u6210\u529f\u6216\u8005\u5931\u8d25\uff0cfirst \u8868\u793a Address \u7c7b\u578b\u7684\u5730\u5740\u3002")))),(0,p.kt)("h4",{id:"make_address-22"},"make_address() 2/2"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"std::pair<Address, bool> make_address(const std::string &str_address)\n")),(0,p.kt)("p",null,'CDT \u9ed8\u8ba4\u8bc6\u522b\u7684\u5730\u5740\u662f\u4e3b\u7f51\u5730\u5740\u4e5f\u5c31\u662f\u5730\u5740\u524d\u7f00\u4e3alat\uff0c\u540c\u65f6\u6211\u4eec\u652f\u6301\u4ee5\u592a\u574a\u4ee5\u5730\u5740\u683c\u5f0f,\u4f8b\u5982: "0x02ea8A5273d20f3e378a56D958a684004eDD0094"'),(0,p.kt)("p",null,"\u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u5730\u5740\u5bf9\u8c61\u3002"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u53c2\u6570"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"str\uff1a")," \u5b57\u7b26\u4e32"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"\u8fd4\u56de\u503c\u4e3a pair\uff0cpair \u7684 second \u8868\u793a\u6210\u529f\u6216\u8005\u5931\u8d25\uff0cfirst \u8868\u793a Address \u7c7b\u578b\u7684\u5730\u5740")))),(0,p.kt)("h4",{id:"platon_balance"},"platon_balance()"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"Energon platon::platon_balance(const Address & addr)\n")),(0,p.kt)("p",null,"\u6839\u636e\u5730\u5740\u83b7\u53d6\u4f59\u989d\u3002"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u53c2\u6570"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"addr\uff1a"),"\u5730\u5740"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"\u5730\u5740\u4f59\u989d")))),(0,p.kt)("h4",{id:"platon_transfer"},"platon_transfer()"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"bool platon::platon_transfer(const Address &addr, const Energon &amount)\n")),(0,p.kt)("p",null,"\u5c06Energon\u7684\u91d1\u989d\u8f6c\u79fb\u5230\u5730\u5740\u3002"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u53c2\u6570"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"addr\uff1a"),"\u5e10\u6237\u5730\u5740"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"amount\uff1a"),"Energon\u7684\u6570\u91cf"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"\u5982\u679c\u4f20\u8f93\u6210\u529f\u5219\u4e3atrue\uff0c\u5426\u5219\u4e3afalse")))),(0,p.kt)("h4",{id:"platonenergon-class"},"platon::Energon Class"),(0,p.kt)("p",null,"Energo\u662f\u8d27\u5e01\u76f8\u5173\u64cd\u4f5c\u7c7b"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u516c\u5171\u6210\u5458\u51fd\u6570")),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"Energon (u128 n)"),"\n\u6784\u9020\u4e00\u4e2a\u65b0\u7684Energon\u3002")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"const u128 Get () const"),"\n\u83b7\u5f97\u4e00\u5b9a\u91cf\u7684Von\u3002")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"const bytes Bytes () const"),"\n\u83b7\u53d6\u503c\u7684\u5b57\u8282\uff0c\u5b57\u8282\u4f7f\u7528\u5927\u7aef\u8868\u793a\u3002")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"Energon & Add (const u128 &v)"),"\n\u6dfb\u52a0\u91cf\u7684 Von\u3002")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"Energon & Add (const Energon &rhs)"),"\n\u4e24\u4e2a Energon \u5bf9\u8c61\u76f8\u52a0")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"Energon & operator+= (const Energon &rhs)"),"\n\u5b9e\u73b0\u8fd0\u7b97\u7b26+ =")))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570")),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"platon::Energon::Energon(u128 n)"),"\n\u6784\u9020\u4e00\u4e2a\u65b0\u7684Energon\u3002",(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u53c2\u6570"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"n\uff1a")," Von \u6570\u91cf"))))))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u6210\u5458\u51fd\u6570\u529f\u80fd")),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"Energon& platon::Energon::Add(const Energon & rhs)"),"\n\u6dfb\u52a0\u91cf\u7684Von\u3002"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u53c2\u6570"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"rhs\uff1a"),"Von\u7684\u6570\u91cf"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"Energon\u7684\u5f15\u7528"))))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"Energon& platon::Energon::Add(const u128 & v)"),"\n\u6dfb\u52a0\u91cf\u7684Von\u3002"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u53c2\u6570"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"v\uff1a"),"Von\u7684\u6570\u91cf"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"Energon\u7684\u5f15\u7528"))))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"const bytes platon::Energon::Bytes() const"),"\n\u83b7\u53d6\u503c\u7684\u5b57\u8282\uff0c\u5b57\u8282\u4f7f\u7528\u5927\u7aef\u8868\u793a\u3002"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"\u503c\u7684\u5b57\u8282"))))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"const u128 platon::Energon::Get() const"),"\n\u83b7\u5f97\u4e00\u5b9a\u91cf\u7684Von\u3002"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"Von\u91cf"))))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"Energon& platon::Energon::operator+= ( const Energon & rhs)"),"\n\u5b9e\u73b0\u8fd0\u7b97\u7b26+ ="),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u53c2\u6570"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"rhs\uff1a"),"Energon\u5bf9\u8c61"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"Energon\u7684\u5f15\u7528")))))))),(0,p.kt)("h4",{id:"platonwhitelist-tablename--class"},"platon::WhiteList< TableName > Class"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"template<Name::Raw TableName>\nclass platon::WhiteList< TableName >\n")),(0,p.kt)("p",null,"\u6301\u4e45\u5b58\u50a8\u767d\u540d\u5355\u5de5\u5177\u3002"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u6a21\u677f\u53c2\u6570")),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"Name\uff1a"),"\u767d\u540d\u5355\u540d\u79f0\uff0c\u5728\u540c\u4e00\u5408\u7ea6\u4e2d\uff0c\u8be5\u540d\u79f0\u5e94\u552f\u4e00"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570")),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"template<Name::Raw TableName>\nplaton::WhiteList< TableName >::WhiteList ()"))))),(0,p.kt)("p",null,"\u6784\u9020\u4e00\u4e2a\u65b0\u7684\u6e05\u5355\u3002"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u516c\u5171\u6210\u5458\u51fd\u6570")),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"WhiteList ()"),"\n\u6784\u9020\u4e00\u4e2a\u65b0\u7684\u6e05\u5355\u3002")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"void Add (const std::string &addr)"),"\n\u5c06\u5730\u5740\u6dfb\u52a0\u5230\u767d\u540d\u5355\u3002")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"void Add (const Address &addr)"),"\n\u5c06\u5730\u5740\u6dfb\u52a0\u5230\u767d\u540d\u5355\u3002")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"void Delete (const std::string &addr)"),"\n\u4ece\u767d\u540d\u5355\u4e2d\u5220\u9664\u5730\u5740\u3002")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"void Delete (const Address &addr)"),"\n\u4ece\u767d\u540d\u5355\u4e2d\u5220\u9664\u5730\u5740\u3002")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"bool Exists (const std::string &addr)"),"\n\u8be5\u5730\u5740\u662f\u5426\u5b58\u5728\u4e8e\u767d\u540d\u5355\u4e2d\u3002")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"bool Exists (const Address &addr)"),"\n\u8be5\u5730\u5740\u662f\u5426\u5b58\u5728\u4e8e\u767d\u540d\u5355\u4e2d\u3002")))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u6210\u5458\u51fd\u6570\u529f\u80fd")),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName>\nvoid platon::WhiteList< TableName >::Add ( const Address & addr)"),"\n\u5c06\u5730\u5740\u6dfb\u52a0\u5230\u767d\u540d\u5355\u3002"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u53c2\u6570"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"addr\uff1a"),"\u5e10\u6237\u5730\u5740"))))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName>\nvoid platon::WhiteList< TableName >::Add ( const std::string & addr)"),"\n\u5c06\u5730\u5740\u6dfb\u52a0\u5230\u767d\u540d\u5355\u3002"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u53c2\u6570"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"addr\uff1a"),"\u5e10\u6237\u5730\u5740"))))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName>\nvoid platon::WhiteList< TableName >::Delete ( const Address & addr)"),"\n\u4ece\u767d\u540d\u5355\u4e2d\u5220\u9664\u5730\u5740\u3002"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u53c2\u6570"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"addr\uff1a"),"\u5e10\u6237\u5730\u5740"))))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName>\nvoid platon::WhiteList< TableName >::Delete ( const std::string & addr)"),"\n\u4ece\u767d\u540d\u5355\u4e2d\u5220\u9664\u5730\u5740\u3002"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u53c2\u6570"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"addr\uff1a"),"\u5e10\u6237\u5730\u5740"))))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName>\nbool platon::WhiteList< TableName >::Exists ( const Address & addr)"),"\n\u8be5\u5730\u5740\u662f\u5426\u5b58\u5728\u4e8e\u767d\u540d\u5355\u4e2d\u3002"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u53c2\u6570"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"addr\uff1a"),"\u5e10\u6237\u5730\u5740"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"\u5982\u679c\u5b58\u5728\u5219\u4e3atrue\uff0c\u5426\u5219\u4e3afalse"))))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName>\nbool platon::WhiteList< TableName >::Exists ( const std::string & addr)"),"\n\u8be5\u5730\u5740\u662f\u5426\u5b58\u5728\u4e8e\u767d\u540d\u5355\u4e2d\u3002"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u53c2\u6570"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"addr\uff1a"),"\u5e10\u6237\u5730\u5740"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"\u5982\u679c\u5b58\u5728\u5219\u4e3atrue\uff0c\u5426\u5219\u4e3afalse")))))))),(0,p.kt)("h3",{id:"\u5b58\u50a8api"},"\u5b58\u50a8API"),(0,p.kt)("h4",{id:"platon_set_state"},"platon_set_state()"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"void platon_set_state(const uint8_t *key, size_t klen, const uint8_t *value, size_t vlen)\n")),(0,p.kt)("p",null,"\u8bbe\u7f6e\u72b6\u6001\u5bf9\u8c61"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u53c2\u6570"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"key\uff1a"),"\u952e"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"Klen\uff1a"),"\u952e\u7684\u957f\u5ea6"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"value\uff1a"),"\u503c"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"vlen\uff1a"),"\u503c\u7684\u957f\u5ea6")))),(0,p.kt)("h4",{id:"platon_get_state_length"},"platon_get_state_length()"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"size_t platon_get_state_length(const uint8_t *key, size_t klen)\n")),(0,p.kt)("p",null,"\u83b7\u53d6\u952e\u5bf9\u5e94\u7684\u503c\u7684\u957f\u5ea6"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u53c2\u6570")),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"key\uff1a"),"\u952e"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"Klen\uff1a"),"\u952e\u7684\u957f\u5ea6"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u8fd4\u56de\u503c")),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"\u952e\u5bf9\u5e94\u7684\u503c\u7684\u957f\u5ea6")))),(0,p.kt)("h4",{id:"platon_get_state"},"platon_get_state()"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"size_t platon_get_state(const uint8_t *key, size_t klen, uint8_t *value, size_t vlen);\n")),(0,p.kt)("p",null,"\u83b7\u53d6\u72b6\u6001\u5bf9\u8c61"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u53c2\u6570")),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"key\uff1a"),"\u952e"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"Klen\uff1a"),"\u5bc6\u94a5\u7684\u957f\u5ea6"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"value\uff1a"),"\u503c"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"vlen\uff1a"),"\u4ef7\u503c\u7684\u957f\u5ea6"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u8fd4\u56de\u503c")),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"\u503c\u7684\u957f\u5ea6")))),(0,p.kt)("h4",{id:"platonstoragetype-storagename-t--\u6a21\u677f\u7c7b"},"platon::StorageType< StorageName, T > \u6a21\u677f\u7c7b"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"template<Name::Raw StorageName, typename T>\nclass platon::StorageType< StorageName, T >\n")),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u6a21\u677f\u53c2\u6570")),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"StorageName\uff1a"),"\u5143\u7d20\u503c\u540d\u79f0\uff0c\u5728\u540c\u4e00\u5408\u7ea6\u4e2d\uff0c\u8be5\u540d\u79f0\u5fc5\u987b\u552f\u4e00"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"T\uff1a"),"\u5143\u7d20\u7c7b\u578b"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u516c\u5171\u6210\u5458\u529f\u80fd")),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"StorageType ()"),"\n\u6784\u9020\u4e00\u4e2a\u65b0\u7684\u5b58\u50a8\u7c7b\u578b\u5bf9\u8c61")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"StorageType (const T &d)"),"\n\u6784\u9020\u4e00\u4e2a\u65b0\u7684\u5b58\u50a8\u7c7b\u578b\u5bf9\u8c61")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"StorageType (const StorageType< StorageName, T > &)=delete"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"StorageType (const StorageType< StorageName, T > &&)=delete"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"~StorageType ()"),"\n\u9500\u6bc1\u5b58\u50a8\u7c7b\u578b\u5bf9\u8c61\u3002\u5237\u65b0\u5230\u533a\u5757\u94fe\u3002")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"T & operator= (const T &t)"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"template<typename P> bool operator== (const P &t) const"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"template<typename P> bool operator!= (const P &t) const"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"template<typename P> bool operator< (const P &t) const"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"template<typename P> bool operator>= (const P &t) const"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"template<typename P> bool operator<= (const P &t) const"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"template<typename P> bool operator> (const P &t) const"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"template<typename P> T & operator^= (const P &t) const"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"template<typename P> T operator^ (const P &t) const"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"template<typename P> T & operator|= (const P &t) const"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"template<typename P> T operator| (const P &t) const"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"template<typename P> T & operator&= (const P &t) const"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"template<typename P> T operator& (const P &t) const"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"T operator~ () const"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"T & operator<< (int offset)"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"T & operator>> (int offset)"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"T & operator++ ()"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"T operator++ (int)"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"T & operator[] (int i)"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"template<typename P> T & operator+= (const P &p)"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"template<typename P> T & operator-= (const P &p)"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"T & operator* ()"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"T *  operator-> ()"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"operator bool () const"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"T get () const"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"T & self ()")))))),(0,p.kt)("h4",{id:"platondbarray-tablename-key-n--\u6a21\u677f\u7c7b"},"platon::db::Array< TableName, Key, N > \u6a21\u677f\u7c7b"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"template<Name::Raw TableName, typename Key, unsigned N>\nclass platon::db::Array< TableName, Key, N >\n")),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u6210\u5458\u7c7b")),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"class const_iterator\nConstant iterator."))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"class const_reverse_iterator\nConstant reverse iterator."))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"class iterator\nIterator."))))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"Public Types")),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"typedef std::reverse_iterator< iterator >  reverse_iterator")))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u516c\u5171\u6210\u5458\u51fd\u6570")),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"Array ()"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"Array (const Array< TableName, Key, N > &)=delete"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"Array (const Array< TableName, Key, N > &&)=delete"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"Array< TableName, Key, N > & operator= (const Array< TableName, Key, N > &)=delete"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"~Array ()"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"iterator begin ()"),"\n\u8fed\u4ee3\u5668\u5f00\u59cb\u4f4d\u7f6e")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"iterator end ()"),"\n\u8fed\u4ee3\u5668\u7ed3\u675f\u4f4d\u7f6e")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"reverse_iterator rbegin ()"),"\n\u53cd\u5411\u8fed\u4ee3\u5668\u5f00\u59cb\u4f4d\u7f6e\u3002")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"reverse_iterator rend ()"),"\n\u53cd\u5411\u8fed\u4ee3\u5668\u7ed3\u675f\u4f4d\u7f6e\u3002")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"const_iterator cbegin ()"),"\n\u5e38\u91cf\u8fed\u4ee3\u5668\u5f00\u59cb\u4f4d\u7f6e\u3002")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"const_iterator cend ()"),"\n\u5e38\u91cf\u8fed\u4ee3\u5668\u6700\u7ec8\u4f4d\u7f6e\u3002")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"const_reverse_iterator crbegin ()"),"\n\u5e38\u6570\u53cd\u5411\u8fed\u4ee3\u5668\u7684\u8d77\u59cb\u4f4d\u7f6e\u3002")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"const_reverse_iterator crend ()"),"\n\u5e38\u6570\u53cd\u5411\u8fed\u4ee3\u5668\u7684\u6700\u7ec8\u4f4d\u7f6e\u3002")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"Key & at (size_t pos)"),"\n\u83b7\u53d6\u6307\u5b9a\u7684position\u5143\u7d20\u3002")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"Key & operator[] (size_t pos)"),"\n\u62ec\u53f7\u8fd0\u7b97\u7b26\u3002")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"size_t  size ()"),"\n\u6570\u7ec4\u5927\u5c0f")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"Key get_const (size_t pos)"),"\n\u83b7\u53d6Const\u5bf9\u8c61\u3002\u4e0d\u8981\u5237\u65b0\u4ee5\u7f13\u5b58\u3002")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"void  set_const (size_t pos, const Key &key)"),"\n\u8bbe\u7f6eConst\u5bf9\u8c61\uff0c\u8bf7\u52ff\u5237\u65b0\u4ee5\u7f13\u5b58\u3002")))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u9759\u6001\u516c\u5171\u5c5e\u6027")),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},'static const std::string  kType = "__array__"'))))),(0,p.kt)("h4",{id:"platondbmap-tablename-key-value--\u6a21\u677f\u7c7b"},"platon::db::Map< TableName, Key, Value > \u6a21\u677f\u7c7b"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"template<Name::Raw TableName, typename Key, typename Value>\nclass platon::db::Map< TableName, Key, Value >\n")),(0,p.kt)("p",null,"\u5b9e\u73b0map\u64cd\u4f5c\uff0cmap\u6a21\u677f\u3002"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u6a21\u677f\u53c2\u6570"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"TableName:")," map\u7684\u540d\u79f0\uff0cmap\u7684\u540d\u79f0\u5728\u6bcf\u4e2a\u5408\u7ea6\u4e2d\u5e94\u8be5\u662f\u552f\u4e00\u7684\u3002"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"Key\uff1a"),"\u952e\u7c7b\u578b"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"Value\uff1a"),"\u503c\u7c7b\u578b")))),(0,p.kt)("p",null,"MapType::Traverse \u9ed8\u8ba4\u503c\u4e3aTraverse\uff0c\u5f53Traverse\u9700\u8981\u989d\u5916\u7684\u6570\u636e\u7ed3\u6784\u8fdb\u884c\u64cd\u4f5c\u65f6\uff0c\u5f53\u4e0d\u9700\u8981\u904d\u5386\u64cd\u4f5c\u65f6\uff0c\u5c06\u5176\u8bbe\u7f6e\u4e3aNoTraverse\u3002"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u516c\u5171\u6210\u5458\u51fd\u6570\u529f\u80fd")),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"Map ()"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"Map(const Map< TableName, Key, Value > &)=delete"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"Map(const Map< TableName, Key, Value > &&)=delete"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"Map< TableName, Key, Value > & operator= (const Map< TableName, Key, Value > &)=delete"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"~Map ()"),"\n\u9500\u6bc1Map\u5bf9\u8c61\u5c06\u6570\u636e\u5237\u65b0\u5230\u533a\u5757\u94fe\u3002")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"bool insert (const Key &k, const Value &v)"),"\n\u63d2\u5165\u65b0\u7684\u952e\u503c\u5bf9\uff0c\u66f4\u65b0\u4e3a\u7f13\u5b58\u3002")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"bool insert_const (const Key &k, const Value &v)"),"\n\u63d2\u5165\u5c06\u4e0d\u4f1a\u66f4\u65b0\u5230\u7f13\u5b58\u7684\u65b0\u952e\u503c\u5bf9\u3002\u9002\u7528\u4e8e\u5927\u91cf\u63d2\u5165\uff0c\u63d2\u5165\u540e\u65e0\u9700\u66f4\u65b0\u3002")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"Value  get_const (const Key &k)"),"\n\u83b7\u53d6Const\u5bf9\u8c61\uff0c\u5c06\u4e0d\u4f1a\u52a0\u5165\u7f13\u5b58\u3002")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"Value & at (const Key &k)"),"\n\u83b7\u53d6\u503c\uff0c\u5c06\u88ab\u6dfb\u52a0\u5230\u7f13\u5b58\u4e2d\u3002")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"void  erase (const Key &k)"),"\n\u5220\u9664\u952e\u503c\u5bf9\u3002")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"Value & operator[] (const Key &k)"),"\n\u62ec\u53f7\u8fd0\u7b97\u7b26\u3002")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"boolcontains (const Key &key)"),"\n\u68c0\u67e5\u5bb9\u5668\u4e2d\u662f\u5426\u5b58\u5728\u5177\u6709\u4e0ekey\u7b49\u6548\u7684\u952e\u7684\u5143\u7d20\u3002")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"void  flush ()"),"\n\u5c06\u5185\u5b58\u4e2d\u7684\u4fee\u6539\u6570\u636e\u5237\u65b0\u5230\u533a\u5757\u94fe\u3002")))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u9759\u6001\u516c\u5171\u5c5e\u6027")),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},'static const std::string  kType = "__map__"')))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570")),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName, typename Key , typename Value >\nplaton::db::Map< TableName, Key, Value >::Map ()"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName, typename Key , typename Value >\nplaton::db::Map< TableName, Key, Value >::Map (const Map< TableName, Key, Value > & )"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName, typename Key , typename Value >\nplaton::db::Map< TableName, Key, Value >::Map (const Map< TableName, Key, Value > && )"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName, typename Key , typename Value >\nplaton::db::Map< TableName, Key, Value >::~Map ()")))))),(0,p.kt)("p",null,"\u9500\u6bc1Map\u5bf9\u8c61\u5c06\u6570\u636e\u5237\u65b0\u5230\u533a\u5757\u94fe\u3002"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u6210\u5458\u51fd\u6570\u529f\u80fd")),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName, typename Key , typename Value >\nValue& platon::db::Map< TableName, Key, Value >::at ( const Key & k )"),"\n\u83b7\u53d6\u503c\uff0c\u5c06\u88ab\u6dfb\u52a0\u5230\u7f13\u5b58\u4e2d\u3002"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u53c2\u6570")),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"k\uff1a"),"\u952e"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u8fd4\u56de\u503c"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},"\u503c\u7684\u5f15\u7528")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u793a\u4f8b\uff1a")),(0,p.kt)("pre",{parentName:"li"},(0,p.kt)("code",{parentName:"pre"},'```cpp\ntypedef platon::db::Map<"map_str"_n, std::string, std::string> MapStr;\nMapStr map;\nmap.insert("hello", "world");\n')),(0,p.kt)("p",{parentName:"li"},"assert(map.at",'["hello"]',' == "world");'),(0,p.kt)("pre",{parentName:"li"},(0,p.kt)("code",{parentName:"pre"},""))))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName, typename Key , typename Value >\nbool platon::db::Map< TableName, Key, Value >::contains ( const Key & key )"),"\n\u68c0\u67e5\u5bb9\u5668\u4e2d\u662f\u5426\u5b58\u5728\u5177\u6709\u4e0ekey\u7b49\u6548\u7684\u952e\u7684\u5143\u7d20\u3002"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u53c2\u6570")),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"k\uff1a"),"\u952e"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u8fd4\u56de\u503c"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},"\u5982\u679c\u5b58\u5728\u8fd9\u6837\u7684\u5143\u7d20\uff0c\u5219\u4e3atrue\uff0c\u5426\u5219\u4e3afalse\u3002")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u793a\u4f8b\uff1a")),(0,p.kt)("pre",{parentName:"li"},(0,p.kt)("code",{parentName:"pre"},'```cpp\n typedef platon::db::Map<"map_str"_n, std::string, std::string> MapStr;\n MapStr map;\n map.["hello"] = "world";\n')),(0,p.kt)("p",{parentName:"li"},'assert(map.contains("hello"));'),(0,p.kt)("pre",{parentName:"li"},(0,p.kt)("code",{parentName:"pre"},""))))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName, typename Key , typename Value >\nvoid platon::db::Map< TableName, Key, Value >::erase ( const Key & k )"),"\n\u5220\u9664\u952e\u503c\u5bf9\u3002"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u53c2\u6570")),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"k\uff1a"),"\u952e"))))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u793a\u4f8b\uff1a")),(0,p.kt)("pre",{parentName:"li"},(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},'typedef platon::db::Map<"map_str"_n, std::string, std::string> MapStr;\nMapStr map;\nmap.insert("hello", "world");\nmap.erase("hello");\n'))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName, typename Key , typename Value >\nvoid platon::db::Map< TableName, Key, Value >::flush ()"),"\n\u5c06\u5185\u5b58\u4e2d\u7684\u4fee\u6539\u6570\u636e\u5237\u65b0\u5230\u533a\u5757\u94fe\u3002")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName, typename Key , typename Value >\nValue platon::db::Map< TableName, Key, Value >::get_const ( const Key & k)"),"\n\u83b7\u53d6Const\u5bf9\u8c61\uff0c\u5c06\u4e0d\u4f1a\u52a0\u5165\u7f13\u5b58\u3002"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u53c2\u6570")),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"k\uff1a"),"\u952e"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u8fd4\u56de\u503c"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},"\u4ef7\u503c")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u793a\u4f8b\uff1a")),(0,p.kt)("pre",{parentName:"li"},(0,p.kt)("code",{parentName:"pre"},'```cpp\ntypedef platon::db::Map<"map_str"_n, std::string, std::string> MapStr;\nMapStr map;\nmap.insert("hello", "world");\n')),(0,p.kt)("p",{parentName:"li"},"assert(map.get_const",'["hello"]',' == "world");'),(0,p.kt)("pre",{parentName:"li"},(0,p.kt)("code",{parentName:"pre"},""))))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName, typename Key , typename Value >\nbool platon::db::Map< TableName, Key, Value >::insert ( const Key & k,\nconst Value & v)"),"\n\u63d2\u5165\u65b0\u7684\u952e\u503c\u5bf9\uff0c\u66f4\u65b0\u4e3a\u7f13\u5b58\u3002"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u53c2\u6570")),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"k\uff1a"),"\u952e"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"v\uff1a"),"\u503c"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u8fd4\u56de\u503c")),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"true\u63d2\u5165\u6210\u529f\uff0cfalse\u63d2\u5165\u5931\u8d25"))))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u793a\u4f8b\uff1a")),(0,p.kt)("pre",{parentName:"li"},(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},'typedef platon::db::Map<"map_str"_n, std::string, std::string> MapStr;\nMapStr map;\nmap.insert("hello", "world");\nassert(map["hello"] == "world");\n'))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName, typename Key , typename Value >\nbool platon::db::Map< TableName, Key, Value >::insert_const ( const Key & k,\nconst Value & v)"),"\n\u63d2\u5165\u5c06\u4e0d\u4f1a\u66f4\u65b0\u5230\u7f13\u5b58\u7684\u65b0\u952e\u503c\u5bf9\u3002\u9002\u7528\u4e8e\u5927\u91cf\u63d2\u5165\uff0c\u63d2\u5165\u540e\u65e0\u9700\u66f4\u65b0\u3002"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u53c2\u6570")),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"k\uff1a"),"\u952e"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"v\uff1a"),"\u503c"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u8fd4\u56de\u503c")),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"true\u63d2\u5165\u6210\u529f\uff0cfalse\u63d2\u5165\u5931\u8d25"))))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u793a\u4f8b\uff1a")),(0,p.kt)("pre",{parentName:"li"},(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},'typedef platon::db::Map<"map_str"_n, std::string, std::string> MapStr;\nMapStr map;\nmap.insert_const("hello", "world");\nassert(map["hello"] == "world");\n'))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName, typename Key , typename Value >\nMap<TableName, Key, Value>& platon::db::Map< TableName, Key, Value >::operator= ( const Map< TableName, Key, Value > & )"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName, typename Key , typename Value >\nValue& platon::db::Map< TableName, Key, Value >::operator[] ( const Key & k)"),"\n\u62ec\u53f7\u8fd0\u7b97\u7b26\u3002"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u53c2\u6570")),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"k\uff1a"),"\u952e"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u8fd4\u56de\u503c"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},"\u4ef7\u503c\u4e0e\u83b7\u53d6\u4ef7\u503c")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u793a\u4f8b\uff1a")),(0,p.kt)("pre",{parentName:"li"},(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},'typedef platon::db::Map<"map_str"_n, std::string, std::string> MapStr;\nMapStr map;\nmap.["hello"] = "world";\n'))))))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u6210\u5458\u53d8\u91cf")),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},'template<Name::Raw TableName, typename Key , typename Value >\nconst std::string platon::db::Map< TableName, Key, Value >::kType = "__map__"'))))),(0,p.kt)("h4",{id:"templatenameraw-tablename-typename-t-typename-indices-class-platondbmultiindex-tablename-t-indices-"},"template<Name::Raw TableName, typename T, typename... Indices> class platon::db::MultiIndex< TableName, T, Indices >"),(0,p.kt)("p",null,"MultiIndex\u652f\u6301\u60df\u4e00\u7d22\u5f15\u548c\u666e\u901a\u7d22\u5f15\u3002\u60df\u4e00\u7d22\u5f15\u5e94\u8be5\u653e\u5728\u53c2\u6570\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u3002\u7ed3\u6784\u9700\u8981\u63d0\u4f9b\u4e0eindex\u5b57\u6bb5\u5bf9\u5e94\u7684get\u51fd\u6570\u3002"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u6210\u5458\u51fd\u6570\u529f\u80fd")),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName, typename T , typename... Indices>const_iterator platon::db::MultiIndex< TableName, T, Indices >::cbegin()"),"\n\u5f00\u59cb\u8fed\u4ee3\u5668"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"const_iterator"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u793a\u4f8b\uff1a"))),(0,p.kt)("pre",{parentName:"li"},(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},'  struct Member {\n  std::string name;\n  uint8_t age;\n  uint8_t sex;\n  uint64_t $seq_;\n  std::string Name() const { return name; }\n  uint8_t Age() const { return age; }\n  PLATON_SERIALIZE(Member, (name)(age)(sex))\n};\nMultiIndex<\n  "table"_n, Member,\n  IndexedBy<"index"_n, IndexMemberFun<Member, std::string, &Member::Name,\n                                      IndexType::UniqueIndex>>,\n  IndexedBy<"index2"_n, IndexMemberFun<Member, uint8_t, &Member::Age,\n                                      IndexType::NormalIndex>>>\n  member_table;\nfor (auto it = member_table.cbegin(); it != it_end; ++it){}\n'))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName, typename T , typename... Indices>\nconst_iterator platon::db::MultiIndex< TableName, T, Indices >::cend()"),"\n\u7ed3\u675f\u8fed\u4ee3\u5668"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"const_iterator"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u793a\u4f8b\uff1a"))),(0,p.kt)("pre",{parentName:"li"},(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},'  struct Member {\n  std::string name;\n  uint8_t age;\n  uint8_t sex;\n  uint64_t $seq_;\n  std::string Name() const { return name; }\n  uint8_t Age() const { return age; }\n  PLATON_SERIALIZE(Member, (name)(age)(sex))\n};\nMultiIndex<\n  "table"_n, Member,\n  IndexedBy<"index"_n, IndexMemberFun<Member, std::string, &Member::Name,\n                                      IndexType::UniqueIndex>>,\n  IndexedBy<"index2"_n, IndexMemberFun<Member, uint8_t, &Member::Age,\n                                      IndexType::NormalIndex>>>\n  member_table;\nfor (auto it = member_table.cbegin(); it != it_end; ++it){}\n'))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName, typename T , typename... Indices> template<Name::Raw IndexName, typename KEY > size_t platon::db::MultiIndex< TableName, T, Indices >::count(const KEY &key)")),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"\u83b7\u53d6\u4e0e\u7d22\u5f15\u503c\u5bf9\u5e94\u7684\u6570\u636e\u7684\u6570\u91cf"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u793a\u4f8b\uff1a"))),(0,p.kt)("pre",{parentName:"li"},(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},'struct Member {\nstd::string name;\nuint8_t age;\nuint8_t sex;\nuint64_t $seq_;\nstd::string Name() const { return name; }\nuint8_t Age() const { return age; }\nPLATON_SERIALIZE(Member, (name)(age)(sex))\n};\nMultiIndex<\n"table"_n, Member,\n  IndexedBy<"index"_n, IndexMemberFun<Member, std::string, &Member::Name,\n                                    IndexType::UniqueIndex>>,\nIndexedBy<"index2"_n, IndexMemberFun<Member, uint8_t, &Member::Age,\n                                      IndexType::NormalIndex>>>\nmember_table;\nauto count = member_table.count<"index2"_n>(uint8_t(10));\n'))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName, typename T , typename... Indices> template<typename Lambda> std::pair<const_iterator, bool> platon::db::MultiIndex< TableName, T, Indices >::emplace(Lambda &constructor)")),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u53c2\u6570"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"\u6570\u636e\u9879\u5904\u7406\u51fd\u6570"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u8be5\u8fed\u4ee3\u5668\u6307\u793a\u4f7f\u7528bool\u7c7b\u578b\u7684\u63d2\u5165\u662f\u5426\u6210\u529f\u3002\u5982\u679c\u60df\u4e00\u7d22\u5f15\u51b2\u7a81\uff0c\u5219\u63d2\u5165\u5931\u8d25"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u793a\u4f8b\uff1a"))),(0,p.kt)("pre",{parentName:"li"},(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},'struct Member {\n  std::string name;\n  uint8_t age;\n  uint8_t sex;\n  uint64_t $seq_;\n  std::string Name() const { return name; }\n  uint8_t Age() const { return age; }\n  PLATON_SERIALIZE(Member, (name)(age)(sex))\n};\nMultiIndex<\n  "table"_n, Member,\n  IndexedBy<"index"_n, IndexMemberFun<Member, std::string, &Member::Name,\n                                      IndexType::UniqueIndex>>,\n  IndexedBy<"index2"_n, IndexMemberFun<Member, uint8_t, &Member::Age,\n                                      IndexType::NormalIndex>>>\n  member_table;\nmember_table.emplace([&](auto &m) {\n  m.age = 10;\n  m.name = "hello";\n  m.sex = 1;\n});\n'))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName, typename T , typename... Indices> void platon::db::MultiIndex< TableName, T, Indices >::erase(const_iterator position)"),"\n\u57fa\u4e8e\u8fed\u4ee3\u5668\u5220\u9664\u6570\u636e"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u53c2\u6570"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"position\uff1a"),"\u8fed\u4ee3\u5668"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u793a\u4f8b\uff1a"))),(0,p.kt)("pre",{parentName:"li"},(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},'struct Member {\nstd::string name;\nuint8_t age;\nuint8_t sex;\nuint64_t $seq_;\nstd::string Name() const { return name; }\nuint8_t Age() const { return age; }\nPLATON_SERIALIZE(Member, (name)(age)(sex))\n};\nMultiIndex<\n"table"_n, Member,\nIndexedBy<"index"_n, IndexMemberFun<Member, std::string, &Member::Name,\n                                  IndexType::UniqueIndex>>,\nIndexedBy<"index2"_n, IndexMemberFun<Member, uint8_t, &Member::Age,\n                                    IndexType::NormalIndex>>>\nmember_table;\nauto vect_iter = member_table.find<"index"_n>(std::string("use to find data"));\nmember_table.erase(vect_iter[0]);\n'))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName, typename T , typename... Indices> template<Name::Raw IndexName, typename KEY > const_iterator platon::db::MultiIndex< TableName, T, Indices >::find(const KEY & key)"),"\n\u627e\u5230\u6570\u636e\uff0c\u53ea\u6709\u4e00\u4e2a\u552f\u4e00\u7684\u7d22\u5f15\u662f\u53ef\u7528\u7684\u3002"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u53c2\u6570"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"key\uff1a"),"\u7d22\u5f15\u503c"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"\u7ed3\u679c\u8fed\u4ee3\u5668\u3002\u5982\u679c\u6ca1\u6709\u627e\u5230\u503c\u4e3acend()\u3002"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u793a\u4f8b\uff1a"))),(0,p.kt)("pre",{parentName:"li"},(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},'struct Member {\nstd::string name;\nuint8_t age;\nuint8_t sex;\nuint64_t $seq_;\nstd::string Name() const { return name; }\nuint8_t Age() const { return age; }\nPLATON_SERIALIZE(Member, (name)(age)(sex))\n};\nMultiIndex<\n"table"_n, Member,\n  IndexedBy<"index"_n, IndexMemberFun<Member, std::string, &Member::Name,\n                                    IndexType::UniqueIndex>>,\nIndexedBy<"index2"_n, IndexMemberFun<Member, uint8_t, &Member::Age,\n                                      IndexType::NormalIndex>>>\nmember_table;\nauto vect_iter = member_table.find<"index"_n>(std::string("use to find data"));\n'))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName, typename T , typename... Indices> template<Name::Raw IndexName>auto platon::db::MultiIndex< TableName, T, Indices >::get_index()"),"\n\u83b7\u53d6\u975e\u552f\u4e00\u7d22\u5f15\u7684\u7d22\u5f15\u5bf9\u8c61\u3002"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"\u7d22\u5f15\u5bf9\u8c61"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u793a\u4f8b\uff1a"))),(0,p.kt)("pre",{parentName:"li"},(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},'struct Member {\nstd::string name;\nuint8_t age;\nuint8_t sex;\nuint64_t $seq_;\nstd::string Name() const { return name; }\nuint8_t Age() const { return age; }\nPLATON_SERIALIZE(Member, (name)(age)(sex))\n};\nMultiIndex<\n"table"_n, Member,\n  IndexedBy<"index"_n, IndexMemberFun<Member, std::string, &Member::Name,\n                                    IndexType::UniqueIndex>>,\nIndexedBy<"index2"_n, IndexMemberFun<Member, uint8_t, &Member::Age,\n                                      IndexType::NormalIndex>>>\nmember_table;\nauto index = member_table.get_index<"index2"_n>();\n'))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName, typename T , typename... Indices> template<typename Lambda >void platon::db::MultiIndex< TableName, T, Indices >::modify(const_iterator position,Lambda && constructor)"),"\n\u57fa\u4e8e\u8fed\u4ee3\u5668\u4fee\u6539\u6570\u636e\uff0c\u4f46\u4e0d\u80fd\u4fee\u6539\u6240\u6709\u4e0e\u7d22\u5f15\u76f8\u5173\u7684\u5b57\u6bb5\u3002"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u53c2\u6570"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"position\uff1a"),"\u8fed\u4ee3\u5668"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"constructor\uff1a"),"\u66f4\u65b0\u76ee\u6807\u5bf9\u8c61\u7684lambda\u51fd\u6570"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u793a\u4f8b\uff1a"))),(0,p.kt)("pre",{parentName:"li"},(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},'struct Member {\nstd::string name;\nuint8_t age;\nuint8_t sex;\nuint64_t $seq_;\nstd::string Name() const { return name; }\nuint8_t Age() const { return age; }\nPLATON_SERIALIZE(Member, (name)(age)(sex))\n};\nMultiIndex<\n"table"_n, Member,\n  IndexedBy<"index"_n, IndexMemberFun<Member, std::string, &Member::Name,\n                                    IndexType::UniqueIndex>>,\nIndexedBy<"index2"_n, IndexMemberFun<Member, uint8_t, &Member::Age,\n                                      IndexType::NormalIndex>>>\nmember_table;\nmember_table.modify(r.first, [&](auto &m) { m.sex = 15; });\n')))))),(0,p.kt)("h3",{id:"\u5408\u7ea6api"},"\u5408\u7ea6API"),(0,p.kt)("h4",{id:"platon_destroy"},"platon_destroy()"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"bool platon::platon_destroy (const Address & addr)\n")),(0,p.kt)("p",null,"\u9500\u6bc1\u5408\u7ea6\u3002"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u53c2\u6570"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"addr\uff1a"),"\u5408\u7ea6\u5730\u5740"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"\u5982\u679c\u9500\u6bc1\u6210\u529f\uff0c\u5219\u4e3atrue\uff0c\u5426\u5219\u4e3afalse")))),(0,p.kt)("h4",{id:"platon_migrate_contract"},"platon_migrate_contract()"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"template<typename value_type , typename gas_type >\nbool platon::platon_migrate_contract ( Address & addr,\nconst bytes & init_args,\nvalue_type  value,\ngas_type  gas)\n")),(0,p.kt)("p",null,"\u8fc1\u79fb\u5408\u7ea6\u3002"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u53c2\u6570"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"addr\uff1a"),"\u65b0\u5408\u7ea6\u7684\u5730\u5740"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"init_args\uff1a"),"\u8f93\u5165\u53c2\u6570"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"value\uff1a"),"\u8f6c\u8d26\u91d1\u989d"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"gas\uff1a"),"\u652f\u4ed8\u6b64\u4ea4\u6613\u7684gas\u91d1\u989d"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"\u5982\u679c\u8fc1\u79fb\u6210\u529f\uff0c\u5219\u4e3atrue\uff0c\u5426\u5219\u4e3afalse")))),(0,p.kt)("h4",{id:"cross_call_args"},"cross_call_args()"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"template<typename... Args>\nbytes platon::cross_call_args ( const std::string & method,\nconst Args &...  args)  \n")),(0,p.kt)("p",null,"\u6784\u9020\u8de8\u5408\u7ea6\u8c03\u7528\u53c2\u6570\u3002"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u53c2\u6570"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"method\uff1a"),"\u88ab\u8c03\u7528\u5408\u7ea6\u7684\u65b9\u6cd5\u540d\u79f0"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"args\uff1a"),"\u5bf9\u5e94\u4e8e\u5408\u7ea6\u65b9\u6cd5\u7684\u53c2\u6570"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"\u53c2\u6570\u5b57\u8282\u6570\u7ec4")))),(0,p.kt)("h4",{id:"platon_call"},"platon_call()"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"template <typename value_type, typename gas_type, typename... Args>\ninline bool platon_call(const Address &addr, const value_type &value,\nconst gas_type &gas, const std::string &method,\nconst Args &... args)\n")),(0,p.kt)("p",null,"\u6ca1\u6709\u8fd4\u56de\u503c\u7684\u8de8\u5408\u7ea6\u8c03\u7528\u3002"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u53c2\u6570")),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"addr\uff1a"),"\u8981\u8c03\u7528\u7684\u5408\u7ea6\u5730\u5740"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"value\uff1a"),"\u8f6c\u79fb\u5230\u5408\u7ea6\u7684\u91d1\u989d"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"gas\uff1a"),"\u5bf9\u5e94\u7684\u5408\u7ea6\u65b9\u6cd5\u4f30\u8ba1\u6d88\u8017\u7684gas"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"method\uff1a"),"\u88ab\u8c03\u7528\u5408\u7ea6\u7684\u65b9\u6cd5\u540d\u79f0"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"args\uff1a"),"\u5bf9\u5e94\u4e8e\u5408\u7ea6\u65b9\u6cd5\u7684\u53c2\u6570"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u8fd4\u56de\u503c")),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"\u8c03\u7528\u6210\u529f\u6216\u8005\u5931\u8d25"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u793a\u4f8b\uff1a")),(0,p.kt)("pre",{parentName:"li"},(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},'auto address_pair =make_address("lat10jc0t4ndqarj4q6ujl3g3ycmufgc77epxg02lt");\nbool result = platon_call(address_pair.first, uint32_t(100), uint32_t(100), "add", 1,2,3);\nif(!result){\n  platon_throw("cross call fail");\n}\n')))),(0,p.kt)("h4",{id:"platon_call_with_return_value"},"platon_call_with_return_value()"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"template <typename return_type, typename value_type, typename gas_type, typename... Args>\ninline auto platon_call_with_return_value(const Address &addr,\nconst value_type &value,\nconst gas_type &gas,\nconst std::string &method,\nconst Args &... args)\n")),(0,p.kt)("p",null,"\u5e26\u8fd4\u56de\u503c\u7684\u8de8\u5408\u7ea6\u8c03\u7528\u3002"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u53c2\u6570")),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"addr\uff1a"),"\u8981\u8c03\u7528\u7684\u5408\u7ea6\u5730\u5740"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"value\uff1a"),"\u8f6c\u79fb\u5230\u5408\u7ea6\u7684\u91d1\u989d"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"gas\uff1a"),"\u5bf9\u5e94\u7684\u5408\u7ea6\u65b9\u6cd5\u4f30\u8ba1\u6d88\u8017\u7684gas"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"method\uff1a"),"\u88ab\u8c03\u7528\u5408\u7ea6\u7684\u65b9\u6cd5\u540d\u79f0"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"args\uff1a"),"\u5bf9\u5e94\u4e8e\u5408\u7ea6\u65b9\u6cd5\u7684\u53c2\u6570"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u8fd4\u56de\u503c")),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"\u8fd4\u56de\u503c\u548c\u8c03\u7528\u6210\u529f\u6216\u8005\u5931\u8d25"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u793a\u4f8b\uff1a")),(0,p.kt)("pre",{parentName:"li"},(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},'auto address_pair =make_address("lat10jc0t4ndqarj4q6ujl3g3ycmufgc77epxg02lt"); \nauto result = platon_call_with_return_value<int>(address_pair.first, uint32_t(100), uint32_t(100), "add", 1,2,3);\nif(!result.second){\n platon_throw("cross call fail");\n}\n')))),(0,p.kt)("h4",{id:"platon_delegate_call"},"platon_delegate_call()"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"template <typename gas_type, typename... Args>\ninline bool platon_delegate_call(const Address &addr, const gas_type &gas,\nconst std::string &method,\nconst Args &... args) \n")),(0,p.kt)("p",null,"\u6ca1\u6709\u8fd4\u56de\u503c\u7684\u8de8\u5408\u7ea6\u4ee3\u7406\u8c03\u7528\u3002"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u53c2\u6570")),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"addr\uff1a"),"\u8981\u8c03\u7528\u7684\u5408\u7ea6\u5730\u5740"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"gas\uff1a"),"\u5bf9\u5e94\u7684\u5408\u7ea6\u65b9\u6cd5\u4f30\u8ba1\u6d88\u8017\u7684gas"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"method\uff1a"),"\u88ab\u8c03\u7528\u5408\u7ea6\u7684\u65b9\u6cd5\u540d\u79f0"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"args\uff1a"),"\u5bf9\u5e94\u4e8e\u5408\u7ea6\u65b9\u6cd5\u7684\u53c2\u6570"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u8fd4\u56de\u503c")),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"\u8c03\u7528\u6210\u529f\u6216\u8005\u5931\u8d25"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u793a\u4f8b\uff1a")),(0,p.kt)("pre",{parentName:"li"},(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},' auto address_pair =make_address("lat10jc0t4ndqarj4q6ujl3g3ycmufgc77epxg02lt");\n bool result = platon_delegate_call(address_pair.first, uint32_t(100), uint32_t(100), "add", 1,2,3);\n if(!result){\n   platon_throw("cross call fail");\n }\n')))),(0,p.kt)("h4",{id:"platon_delegate_call_with_return_value"},"platon_delegate_call_with_return_value()"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"template <typename return_type, typename gas_type, typename... Args>\ninline auto platon_delegate_call_with_return_value(const Address &addr,\nconst gas_type &gas,\nconst std::string &method,\nconst Args &... args) \n")),(0,p.kt)("p",null,"\u6709\u8fd4\u56de\u503c\u7684\u8de8\u5408\u7ea6\u4ee3\u7406\u8c03\u7528\u3002"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u53c2\u6570")),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"addr\uff1a"),"\u8981\u8c03\u7528\u7684\u5408\u7ea6\u5730\u5740"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"gas\uff1a"),"\u5bf9\u5e94\u7684\u5408\u7ea6\u65b9\u6cd5\u4f30\u8ba1\u6d88\u8017\u7684gas"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"method\uff1a"),"\u88ab\u8c03\u7528\u5408\u7ea6\u7684\u65b9\u6cd5\u540d\u79f0"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"args\uff1a"),"\u5bf9\u5e94\u4e8e\u5408\u7ea6\u65b9\u6cd5\u7684\u53c2\u6570"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u8fd4\u56de\u503c")),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"\u8fd4\u56de\u503c\u548c\u8c03\u7528\u6210\u529f\u6216\u8005\u5931\u8d25"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("strong",{parentName:"p"},"\u793a\u4f8b\uff1a")),(0,p.kt)("pre",{parentName:"li"},(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},'auto address_pair = make_address("lat10jc0t4ndqarj4q6ujl3g3ycmufgc77epxg02lt"); \nauto result = platon_delegate_call_with_return_value<int>(address_pair.first, uint32_t(100), "add", 1,2,3);\nif(!result.secnod){\n  platon_throw("cross call fail");\n}\n')))),(0,p.kt)("h4",{id:"get_call_output"},"get_call_output()"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"template<typename T >\nvoid platon::get_call_output ( T & t)\n")),(0,p.kt)("p",null,"\u83b7\u53d6\u8de8\u5408\u7ea6\u8c03\u7528\u5408\u7ea6\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u3002"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u6a21\u677f\u53c2\u6570"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"T\uff1a"),"\u8f93\u51fa\u503c\u7c7b\u578b"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u53c2\u6570"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"t\uff1a"),"\u5408\u7ea6\u65b9\u6cd5\u8fd4\u56de\u7684\u503c")))),(0,p.kt)("h4",{id:"platon_event"},"platon_event"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"void platon_event(const uint8_t *topic, size_t topic_len, const uint8_t *args,\n                  size_t args_len);\n")),(0,p.kt)("p",null,"\u53d1\u5e03\u4e8b\u4ef6"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u53c2\u6570"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"topic\uff1a"),"\u4e8b\u4ef6\u7684\u4e3b\u9898"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"topic_len\uff1a"),"\u4e3b\u9898\u7684\u957f\u5ea6"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"args\uff1a"),"\u53c2\u6570"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"args_len\uff1a"),"\u53c2\u6570\u7684\u957f\u5ea6")))),(0,p.kt)("h3",{id:"\u5f02\u5e38api"},"\u5f02\u5e38API"),(0,p.kt)("h4",{id:"platon_panic"},"platon_panic"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"void platon_panic(void);\n")),(0,p.kt)("p",null,"\u7ec8\u6b62\u4ea4\u6613\uff0c\u6263\u9664\u4ea4\u6613\u7684\u6240\u6709gas"),(0,p.kt)("h4",{id:"platon_revert"},"platon_revert"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"void platon_revert(void);\n")),(0,p.kt)("p",null,"\u7ec8\u6b62\u4ea4\u6613\u5e76\u6263\u9664\u6d88\u8017\u7684gas"),(0,p.kt)("h3",{id:"\u5176\u4ed6api"},"\u5176\u4ed6API"),(0,p.kt)("h4",{id:"platon_sha3"},"platon_sha3()"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"h256 platon::platon_sha3 ( const bytes & data )\n")),(0,p.kt)("p",null,"Sh3\u7b97\u6cd5\u3002"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u53c2\u6570"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"data\uff1a"),"\u4e8c\u8fdb\u5236\u6570\u636e"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("strong",{parentName:"li"},"\u8fd4\u56de"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"\u6570\u636e\u54c8\u5e0c")))),(0,p.kt)("hr",null))}u.isMDXComponent=!0}}]);