"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5321],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return k}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),p=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=p(n),k=r,c=m["".concat(o,".").concat(k)]||m[k]||u[k]||l;return n?a.createElement(c,i(i({ref:t},d),{},{components:n})):a.createElement(c,i({ref:t},d))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=m;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var p=2;p<l;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2091:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return o},metadata:function(){return p},toc:function(){return d},default:function(){return m}});var a=n(7462),r=n(3366),l=(n(7294),n(3905)),i=["components"],s={id:"Wasm_Contract_Dev_Costs",title:"\u5f00\u53d1\u6210\u672c",sidebar_label:"\u5f00\u53d1\u6210\u672c"},o=void 0,p={unversionedId:"Wasm_Contract_Dev_Costs",id:"Wasm_Contract_Dev_Costs",isDocsHomePage:!1,title:"\u5f00\u53d1\u6210\u672c",description:"\u6982\u8981",source:"@site/i18n/zh-CN/docusaurus-plugin-content-docs/current/wasm\u5408\u7ea6\u5f00\u53d1\u6210\u672c.md",sourceDirName:".",slug:"/Wasm_Contract_Dev_Costs",permalink:"/docs/zh-CN/Wasm_Contract_Dev_Costs",editUrl:"https://github.com/PlatONnetwork/docs/tree/master/website/i18n/zh-CN/docusaurus-plugin-content-docs/current/wasm\u5408\u7ea6\u5f00\u53d1\u6210\u672c.md",version:"current",frontMatter:{id:"Wasm_Contract_Dev_Costs",title:"\u5f00\u53d1\u6210\u672c",sidebar_label:"\u5f00\u53d1\u6210\u672c"},sidebar:"docs",previous:{title:"\u5165\u95e8\u624b\u518c",permalink:"/docs/zh-CN/Wasm_Dev_Manual"},next:{title:"\u6700\u4f73\u5b9e\u8df5",permalink:"/docs/zh-CN/Wasm_Contract_Best_Practice"}},d=[{value:"\u6982\u8981",id:"\u6982\u8981",children:[]},{value:"\u5c0f\u578b\u5408\u7ea6\u793a\u4f8b",id:"\u5c0f\u578b\u5408\u7ea6\u793a\u4f8b",children:[]},{value:"\u4e2d\u578b\u5408\u7ea6\u793a\u4f8b",id:"\u4e2d\u578b\u5408\u7ea6\u793a\u4f8b",children:[]},{value:"\u5927\u578b\u5408\u7ea6\u793a\u4f8b",id:"\u5927\u578b\u5408\u7ea6\u793a\u4f8b",children:[]}],u={toc:d};function m(e){var t=e.components,n=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h3",{id:"\u6982\u8981"},"\u6982\u8981"),(0,l.kt)("p",null,"\u5728\u533a\u5757\u94fe\u7cfb\u7edf\u4e2d\uff0c\u57fa\u4e8e\u4efb\u4f55\u4e00\u6761\u516c\u94fe\u7cfb\u7edf\u5f00\u53d1\u667a\u80fd\u5408\u7ea6\u90fd\u6d89\u53ca\u8d44\u6e90\u652f\u51fa\u7684\u5f00\u53d1\u6210\u672c\u3002\u4f8b\u5982\uff0c\u5728\u7f51\u7edc\u4e0a\u90e8\u7f72/\u8c03\u7528\u667a\u80fd\u5408\u7ea6\uff0c\u8fdb\u884c\u80fd\u91cf\u8f6c\u79fb\uff0c\u8d28\u62bc/\u59d4\u6258\u7b49\u64cd\u4f5c\u90fd\u9700\u8981\u82b1\u8d39\u4e00\u5b9a\u7684\u6210\u672c\uff0c\u4e0d\u540c\u7684\u533a\u5757\u94fe\u7f51\u7edc\u5f00\u53d1\u6210\u672c\u4e0d\u4e00\u6837\uff0c\u5728 ",(0,l.kt)("inlineCode",{parentName:"p"},"PlatON")," \u7f51\u7edc\u4e2d\u8fd0\u884c\u7740\u4e24\u79cd\u865a\u62df\u673aEVM\u548cWASM\uff0c\u5728\u4e0d\u540c\u865a\u62df\u673a\u4e0a\u4e0a\u5f00\u53d1\u667a\u80fd\u5408\u7ea6\u7684\u6210\u672c\u4e5f\u662f\u4e0d\u4e00\u6837\u7684\u3002\u672c\u624b\u518c\u5c06\u91cd\u70b9\u4ecb\u7ecd\u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"WASN")," \u865a\u62df\u673a\u6d89\u53ca\u5230\u7684\u6210\u672c\u4f7f\u7528\uff0c\u672c\u6587\u5c06\u7528\u8868\u683c\u7684\u5f62\u5f0f\u5bf9\u6bd4\u5c0f\u578b\u5408\u7ea6\u3001\u4e2d\u578b\u5408\u7ea6\u548c\u5927\u578b\u5408\u7ea6\u7684\u4e0d\u540c\u5f00\u53d1\u6210\u672c\uff0c\u540c\u65f6\u5c06 ",(0,l.kt)("inlineCode",{parentName:"p"},"PlatON")," \u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},"EVM"),"/",(0,l.kt)("inlineCode",{parentName:"p"},"WASM"),"\u865a\u62df\u673a\u548c\u4ee5\u592a\u574a\u865a\u62df\u673a\u4e4b\u95f4\u8fdb\u884c\u5bf9\u6bd4\u3002\u5728\u5408\u7ea6\u65b9\u9762\uff0c\u4f7f\u7528\u4e00\u4e2a\u7b80\u5355\u7684",(0,l.kt)("inlineCode",{parentName:"p"},"SET/GET"),"\u529f\u80fd\u7684\u5408\u7ea6\u4f5c\u4e3a\u5c0f\u578b\u6d4b\u8bd5\u5408\u7ea6\uff0c\u4e2d\u578b\u5408\u7ea6\u793a\u4f8b\u5c06\u4f7f\u7528\u4e00\u4e2a\u5f00\u6e90\u7684",(0,l.kt)("a",{parentName:"p",href:"https://github.com/yep/eth-tweet"},"\u5fae\u535a\u5ba2"),"\u5408\u7ea6\uff0c\u800c\u5927\u578b\u5408\u7ea6\u5219\u662f\u4e00\u4e2a\u7b26\u5408 ",(0,l.kt)("inlineCode",{parentName:"p"},"PRC20")," \u6807\u51c6\u7684\u667a\u80fd\u5408\u7ea6\u3002"),(0,l.kt)("h4",{id:"\u8d44\u6e90\u6d88\u8017"},"\u8d44\u6e90\u6d88\u8017"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u7b80\u5355set/get\u5408\u7ea6")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"\u7cfb\u7edf"),(0,l.kt)("th",{parentName:"tr",align:"left"},"\u5408\u7ea6\u7ea7\u522b"),(0,l.kt)("th",{parentName:"tr",align:"left"},"\u5408\u7ea6\u5927\u5c0f"),(0,l.kt)("th",{parentName:"tr",align:"left"},"\u6d88\u8017Gas"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Gas \u5355\u4ef7"),(0,l.kt)("th",{parentName:"tr",align:"left"},"\u80fd\u91cf\u635f\u8017"),(0,l.kt)("th",{parentName:"tr",align:"left"},"\u5907\u6ce8"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"PlatON-EVM"),(0,l.kt)("td",{parentName:"tr",align:"left"},"\u5c0f\u578b\u5408\u7ea6"),(0,l.kt)("td",{parentName:"tr",align:"left"},"0.3 kb"),(0,l.kt)("td",{parentName:"tr",align:"left"},"76953"),(0,l.kt)("td",{parentName:"tr",align:"left"},"5,000,000,000 ",(0,l.kt)("inlineCode",{parentName:"td"},"VON")),(0,l.kt)("td",{parentName:"tr",align:"left"},"384765 ",(0,l.kt)("inlineCode",{parentName:"td"},"gVON")),(0,l.kt)("td",{parentName:"tr",align:"left"},"0.000384765 ",(0,l.kt)("inlineCode",{parentName:"td"},"LAT"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"Ethereum"),(0,l.kt)("td",{parentName:"tr",align:"left"},"\u5c0f\u578b\u5408\u7ea6"),(0,l.kt)("td",{parentName:"tr",align:"left"},"0.3 kb"),(0,l.kt)("td",{parentName:"tr",align:"left"},"127173"),(0,l.kt)("td",{parentName:"tr",align:"left"},"5,000,000,000 ",(0,l.kt)("inlineCode",{parentName:"td"},"wei")),(0,l.kt)("td",{parentName:"tr",align:"left"},"635865 ",(0,l.kt)("inlineCode",{parentName:"td"},"Gwei")),(0,l.kt)("td",{parentName:"tr",align:"left"},"0.000635865 ",(0,l.kt)("inlineCode",{parentName:"td"},"ETH"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"PlatON-WASM"),(0,l.kt)("td",{parentName:"tr",align:"left"},"\u5c0f\u578b\u5408\u7ea6"),(0,l.kt)("td",{parentName:"tr",align:"left"},"13.55 kb"),(0,l.kt)("td",{parentName:"tr",align:"left"},"184043"),(0,l.kt)("td",{parentName:"tr",align:"left"},"5,000,000,000 ",(0,l.kt)("inlineCode",{parentName:"td"},"VON")),(0,l.kt)("td",{parentName:"tr",align:"left"},"920215 ",(0,l.kt)("inlineCode",{parentName:"td"},"gVON")),(0,l.kt)("td",{parentName:"tr",align:"left"},"0.000920215 ",(0,l.kt)("inlineCode",{parentName:"td"},"LAT"))))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u5fae\u535a\u5ba2")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"\u7cfb\u7edf"),(0,l.kt)("th",{parentName:"tr",align:"left"},"\u5408\u7ea6\u7ea7\u522b"),(0,l.kt)("th",{parentName:"tr",align:"left"},"\u5408\u7ea6\u5927\u5c0f"),(0,l.kt)("th",{parentName:"tr",align:"left"},"\u6d88\u8017Gas"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Gas \u5355\u4ef7"),(0,l.kt)("th",{parentName:"tr",align:"left"},"\u80fd\u91cf\u635f\u8017"),(0,l.kt)("th",{parentName:"tr",align:"left"},"\u5907\u6ce8"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"PlatON-EVM"),(0,l.kt)("td",{parentName:"tr",align:"left"},"\u4e2d\u578b\u5408\u7ea6"),(0,l.kt)("td",{parentName:"tr",align:"left"},"2.08 kb"),(0,l.kt)("td",{parentName:"tr",align:"left"},"257065"),(0,l.kt)("td",{parentName:"tr",align:"left"},"5,000,000,000 ",(0,l.kt)("inlineCode",{parentName:"td"},"VON")),(0,l.kt)("td",{parentName:"tr",align:"left"},"1285325 ",(0,l.kt)("inlineCode",{parentName:"td"},"gVON")),(0,l.kt)("td",{parentName:"tr",align:"left"},"0.001285325 ",(0,l.kt)("inlineCode",{parentName:"td"},"LAT"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"Ethereum"),(0,l.kt)("td",{parentName:"tr",align:"left"},"\u4e2d\u578b\u5408\u7ea6"),(0,l.kt)("td",{parentName:"tr",align:"left"},"2.08 kb"),(0,l.kt)("td",{parentName:"tr",align:"left"},"621385"),(0,l.kt)("td",{parentName:"tr",align:"left"},"5,000,000,000 ",(0,l.kt)("inlineCode",{parentName:"td"},"wei")),(0,l.kt)("td",{parentName:"tr",align:"left"},"3106925 ",(0,l.kt)("inlineCode",{parentName:"td"},"Gwei")),(0,l.kt)("td",{parentName:"tr",align:"left"},"0.003106925 ",(0,l.kt)("inlineCode",{parentName:"td"},"ETH"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"PlatON-WASM"),(0,l.kt)("td",{parentName:"tr",align:"left"},"\u4e2d\u578b\u5408\u7ea6"),(0,l.kt)("td",{parentName:"tr",align:"left"},"30.07 kb"),(0,l.kt)("td",{parentName:"tr",align:"left"},"349713"),(0,l.kt)("td",{parentName:"tr",align:"left"},"5,000,000,000 ",(0,l.kt)("inlineCode",{parentName:"td"},"VON")),(0,l.kt)("td",{parentName:"tr",align:"left"},"1748565 ",(0,l.kt)("inlineCode",{parentName:"td"},"gVON")),(0,l.kt)("td",{parentName:"tr",align:"left"},"0.001748565 ",(0,l.kt)("inlineCode",{parentName:"td"},"LAT"))))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"PRC20\u6807\u51c6Token")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"\u7cfb\u7edf"),(0,l.kt)("th",{parentName:"tr",align:"left"},"\u5408\u7ea6\u7ea7\u522b"),(0,l.kt)("th",{parentName:"tr",align:"left"},"\u5408\u7ea6\u5927\u5c0f"),(0,l.kt)("th",{parentName:"tr",align:"left"},"\u6d88\u8017Gas"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Gas \u5355\u4ef7"),(0,l.kt)("th",{parentName:"tr",align:"left"},"\u80fd\u91cf\u635f\u8017"),(0,l.kt)("th",{parentName:"tr",align:"left"},"\u5907\u6ce8"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"PlatON-EVM"),(0,l.kt)("td",{parentName:"tr",align:"left"},"\u5927\u578b\u5408\u7ea6"),(0,l.kt)("td",{parentName:"tr",align:"left"},"4.45 kb"),(0,l.kt)("td",{parentName:"tr",align:"left"},"552823"),(0,l.kt)("td",{parentName:"tr",align:"left"},"5,000,000,000 ",(0,l.kt)("inlineCode",{parentName:"td"},"VON")),(0,l.kt)("td",{parentName:"tr",align:"left"},"2764115  ",(0,l.kt)("inlineCode",{parentName:"td"},"gVON")),(0,l.kt)("td",{parentName:"tr",align:"left"},"0.002764115 ",(0,l.kt)("inlineCode",{parentName:"td"},"LAT"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"Ethereum"),(0,l.kt)("td",{parentName:"tr",align:"left"},"\u5927\u578b\u5408\u7ea6"),(0,l.kt)("td",{parentName:"tr",align:"left"},"4.45 kb"),(0,l.kt)("td",{parentName:"tr",align:"left"},"1282171"),(0,l.kt)("td",{parentName:"tr",align:"left"},"5,000,000,000 ",(0,l.kt)("inlineCode",{parentName:"td"},"wei")),(0,l.kt)("td",{parentName:"tr",align:"left"},"6410855  ",(0,l.kt)("inlineCode",{parentName:"td"},"Gwei")),(0,l.kt)("td",{parentName:"tr",align:"left"},"0.006410855 ",(0,l.kt)("inlineCode",{parentName:"td"},"ETH"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"PlatON-WASM"),(0,l.kt)("td",{parentName:"tr",align:"left"},"\u5927\u578b\u5408\u7ea6"),(0,l.kt)("td",{parentName:"tr",align:"left"},"35.9 kb"),(0,l.kt)("td",{parentName:"tr",align:"left"},"486274"),(0,l.kt)("td",{parentName:"tr",align:"left"},"5,000,000,000 ",(0,l.kt)("inlineCode",{parentName:"td"},"VON")),(0,l.kt)("td",{parentName:"tr",align:"left"},"2431370  ",(0,l.kt)("inlineCode",{parentName:"td"},"gVON")),(0,l.kt)("td",{parentName:"tr",align:"left"},"0.00243137 ",(0,l.kt)("inlineCode",{parentName:"td"},"LAT"))))),(0,l.kt)("h3",{id:"\u5c0f\u578b\u5408\u7ea6\u793a\u4f8b"},"\u5c0f\u578b\u5408\u7ea6\u793a\u4f8b"),(0,l.kt)("h4",{id:"\u7b80\u5355setget\u5408\u7ea6"},"\u7b80\u5355set/get\u5408\u7ea6"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"EVM\u793a\u4f8b\u4ee3\u7801")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"pragma solidity ^0.4.12;\n\ncontract SimpleTest {\n    \n    uint public age;\n \n    function setAge(uint _input) public {\n        age = _input;\n    }\n \n    function getAge() public constant returns (uint) {\n        return age;\n    }\n}\n")),(0,l.kt)("p",null,"\u5b57\u8282\u7801"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"608060405234801561001057600080fd5b50610117806100206000396000f3006080604052600436106053576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063262a9dff146058578063967e6e65146080578063d5dcf1271460a8575b600080fd5b348015606357600080fd5b50606a60d2565b6040518082815260200191505060405180910390f35b348015608b57600080fd5b50609260d8565b6040518082815260200191505060405180910390f35b34801560b357600080fd5b5060d06004803603810190808035906020019092919050505060e1565b005b60005481565b60008054905090565b80600081905550505600a165627a7a7230582079e51340567895e1097e1c9115e778c3d982b8e71b6997c57f1ba497c56c8b3b0029\n")),(0,l.kt)("p",null,"\u5b57\u8282\u5927\u5c0f\uff1a",(0,l.kt)("inlineCode",{parentName:"p"},"311 byte => 0.3 kb")),(0,l.kt)("hr",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"WASM\u793a\u4f8b\u4ee3\u7801")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'#include <platon/platon.hpp>\n#include <string>\nusing namespace platon;\n\nCONTRACT SimpleStorage: public platon::Contract\n{\n    public:\n        ACTION void init(){}\n    \n        ACTION void set(uint64_t input)\n        {\n            storedData.self() = input;      \n        }\n        \n        CONST uint64_t get()\n        {\n            return storedData.self();\n        }\n\n    private:\n        platon::StorageType<"sstored"_n, uint64_t> storedData;\n};\n\nPLATON_DISPATCH(SimpleStorage,(init)(set)(get))\n')),(0,l.kt)("p",null,"\u5b57\u8282\u7801"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/PlatONnetwork/docs/tree/master/website/i18n/zh-CN/docusaurus-plugin-content-docs/current/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91.assets/SimpleStorage_wasm.bin"},"\u67e5\u770b\u5b57\u8282\u7801")),(0,l.kt)("p",null,"\u5b57\u8282\u5927\u5c0f\uff1a",(0,l.kt)("inlineCode",{parentName:"p"},"13882 byte => 13.55 kb")),(0,l.kt)("hr",null),(0,l.kt)("h6",{id:"\u521b\u5efa\u90e8\u7f72\u5408\u7ea6\u6210\u672c"},"\u521b\u5efa&\u90e8\u7f72\u5408\u7ea6\u6210\u672c"),(0,l.kt)("p",null,"PlatON-EVM"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Gas\u6d88\u8017: 76953"),(0,l.kt)("li",{parentName:"ul"},"Gas\u5355\u4ef7: 5,000,000,000 (5 ",(0,l.kt)("inlineCode",{parentName:"li"},"gVON"),")"),(0,l.kt)("li",{parentName:"ul"},"\u603b\u6210\u672c:  384765 ",(0,l.kt)("inlineCode",{parentName:"li"},"gVON"),"\uff080.000384765 ",(0,l.kt)("inlineCode",{parentName:"li"},"LAT"),"\uff09")),(0,l.kt)("p",null,"\u4ee5\u592a\u574a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Gas\u6d88\u8017: 127173"),(0,l.kt)("li",{parentName:"ul"},"Gas\u5355\u4ef7: 5,000,000,000 (5 ",(0,l.kt)("inlineCode",{parentName:"li"},"Gwei"),")"),(0,l.kt)("li",{parentName:"ul"},"\u603b\u6210\u672c:  635865 ",(0,l.kt)("inlineCode",{parentName:"li"},"Gwei"),"\uff080.000635865 ",(0,l.kt)("inlineCode",{parentName:"li"},"ETH"),"\uff09")),(0,l.kt)("p",null,"PlatON-WASM"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Gas\u6d88\u8017: 184043"),(0,l.kt)("li",{parentName:"ul"},"Gas\u5355\u4ef7: 5,000,000,000 (5 ",(0,l.kt)("inlineCode",{parentName:"li"},"gVON"),")"),(0,l.kt)("li",{parentName:"ul"},"\u603b\u6210\u672c:  920215 ",(0,l.kt)("inlineCode",{parentName:"li"},"gVON"),"\uff080.000920215 ",(0,l.kt)("inlineCode",{parentName:"li"},"LAT"),"\uff09")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"\u4e2d\u578b\u5408\u7ea6\u793a\u4f8b"},"\u4e2d\u578b\u5408\u7ea6\u793a\u4f8b"),(0,l.kt)("h4",{id:"\u5fae\u535a\u5ba2\u5408\u7ea6"},"\u5fae\u535a\u5ba2\u5408\u7ea6"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"EVM\u793a\u4f8b\u4ee3\u7801")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/PlatONnetwork/docs/tree/master/website/i18n/zh-CN/docusaurus-plugin-content-docs/current/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91.assets/account.sol"},"\u70b9\u51fb\u67e5\u770b\u5fae\u535a\u5ba2\u8d26\u6237\u5408\u7ea6")),(0,l.kt)("p",null,"\u5b57\u8282\u7801"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/PlatONnetwork/docs/tree/master/website/i18n/zh-CN/docusaurus-plugin-content-docs/current/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91.assets/Tweet_wasm.bin"},"\u67e5\u770b\u5b57\u8282\u7801")),(0,l.kt)("p",null,"\u5b57\u8282\u5927\u5c0f\uff1a ",(0,l.kt)("inlineCode",{parentName:"p"},"2130.5 byte => 2.08 kb")),(0,l.kt)("hr",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"WASM\u793a\u4f8b\u4ee3\u7801")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'#include <platon/platon.hpp>\n#include <string>\nusing namespace platon;\n\n// data structure of a single tweet.\nstruct Tweet{\n\n    public:\n        uint64_t timestamp;\n        std::string tweetString;\n\n    public:\n        Tweet(){}\n        Tweet(uint64_t &timestamp, const std::string &tweet):timestamp(timestamp), tweetString(tweet) {\n        }\n\n    public:\n        PLATON_SERIALIZE(Tweet, (timestamp)(tweetString))\n};\n\nCONTRACT TweetAccount: public platon::Contract\n{\n    private:\n        // "array" of all tweets of this account: maps the tweet id to the actual tweet.\n        platon::StorageType<"smapping"_n, std::map<std::uint64_t, Tweet>> _tweets;\n        // total number of tweets in the above _tweets mapping.\n        platon::StorageType<"suint"_n, uint64_t> _numberOfTweets;\n        // "owner" of this account: only admin is allowed to tweet.\n        platon::StorageType<"saddress"_n, Address> _adminAddress;\n    \n    public:\n        ACTION void init()\n        {\n            _numberOfTweets.self() = 0;\n            _adminAddress.self() = platon::platon_caller();\n        }\n        \n        // returns true if caller of function("sender") is admin.\n        CONST bool isAdmin(){\n            return platon::platon_caller() == _adminAddress.self();     \n        }\n    \n        // create new tweet\n        ACTION int64_t tweet(const std::string& tweetString) {\n            int64_t result = 0;     \n            if(!isAdmin()){\n                // only owner is allowed to create tweets for this account.\n                result = -1;\n            } else if (tweetString.length() > 160) {\n                // tweet contains more than 160 bytes.\n                result = -2;\n            } else {\n                _tweets.self()[_numberOfTweets].timestamp = platon_timestamp();\n                _tweets.self()[_numberOfTweets].tweetString = tweetString;\n                _numberOfTweets.self() = _numberOfTweets.self() + 1;    \n                result = 0; // success.     \n            }\n            return result;\n        }\n\n        CONST std::string getTweet(uint64_t tweetId){\n            // returns two values \n            std::string tweetString = _tweets.self()[tweetId].tweetString;\n            uint64_t timestamp = _tweets.self()[tweetId].timestamp;\n            return tweetString;     \n        }\n    \n        CONST std::string getLatestTweet() {\n            // returns three values.\n            std::string tweetString = _tweets.self()[_numberOfTweets.self() - 1].tweetString;\n            uint64_t timestamp = _tweets.self()[_numberOfTweets.self() - 1].timestamp;\n            uint64_t numberOfTweets = _numberOfTweets.self();\n            return tweetString;     \n        } \n        \n        CONST Address getOwnerAddress() {\n            return _adminAddress.self();        \n        }\n\n        CONST uint64_t getNumberOfTweets() {\n            return _numberOfTweets.self();          \n        }\n        \n        ACTION void adminRetrieveDonations(const Address& receiver) {\n            if(isAdmin()){\n                Address caddr = platon_address();\n                Energon e = platon_balance(caddr);\n                platon_transfer(receiver, e);\n            }       \n        }\n        \n        CONST Address caddr(){\n            return platon_address();        \n        }\n    \n        CONST std::string caddrBalance(Address receiver){\n            //Address caddr = platon_address();\n            Energon e = platon_balance(receiver);\n            return std::to_string(e.Get());     \n        }\n            \n        ACTION void adminDeleteAccount(){\n            if(isAdmin()){\n                // this is a predefined function, it deletes theh contract and returns all funds to the owner.  \n                platon_destroy(_adminAddress.self());   \n            }       \n        }\n};\n\nPLATON_DISPATCH(TweetAccount,(init)(isAdmin)(tweet)(getTweet)(getLatestTweet)\n(getOwnerAddress)(getNumberOfTweets)(adminRetrieveDonations)(adminDeleteAccount)\n(caddr)(caddrBalance))\n')),(0,l.kt)("p",null,"\u5b57\u8282\u7801"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/PlatONnetwork/docs/tree/master/website/i18n/zh-CN/docusaurus-plugin-content-docs/current/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91.assets/Tweet_wasm.bin"},"\u67e5\u770b\u5b57\u8282\u7801")),(0,l.kt)("p",null,"\u5b57\u8282\u5927\u5c0f\uff1a ",(0,l.kt)("inlineCode",{parentName:"p"},"30788")," byte => 30.07 kb`"),(0,l.kt)("hr",null),(0,l.kt)("h6",{id:"\u521b\u5efa\u90e8\u7f72\u5408\u7ea6\u6210\u672c-1"},"\u521b\u5efa&\u90e8\u7f72\u5408\u7ea6\u6210\u672c"),(0,l.kt)("p",null,"PlatON-EVM"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Gas\u6d88\u8017: 257065"),(0,l.kt)("li",{parentName:"ul"},"Gas\u5355\u4ef7: 5,000,000,000 (5 ",(0,l.kt)("inlineCode",{parentName:"li"},"gVON"),")"),(0,l.kt)("li",{parentName:"ul"},"\u603b\u6210\u672c:  1285325 ",(0,l.kt)("inlineCode",{parentName:"li"},"gVON"),"\uff080.001285325 ",(0,l.kt)("inlineCode",{parentName:"li"},"LAT"),"\uff09")),(0,l.kt)("p",null,"\u4ee5\u592a\u574a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Gas\u6d88\u8017: 621385"),(0,l.kt)("li",{parentName:"ul"},"Gas\u5355\u4ef7: 5,000,000,000 (5 ",(0,l.kt)("inlineCode",{parentName:"li"},"Gwei"),")"),(0,l.kt)("li",{parentName:"ul"},"\u603b\u6210\u672c:  3106925 ",(0,l.kt)("inlineCode",{parentName:"li"},"Gwei"),"\uff080.003106925 ",(0,l.kt)("inlineCode",{parentName:"li"},"ETH"),"\uff09")),(0,l.kt)("p",null,"PlatON-WASM"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Gas\u6d88\u8017: 349713"),(0,l.kt)("li",{parentName:"ul"},"Gas\u5355\u4ef7: 5,000,000,000 (5 ",(0,l.kt)("inlineCode",{parentName:"li"},"gVON"),")"),(0,l.kt)("li",{parentName:"ul"},"\u603b\u6210\u672c:  1748565 ",(0,l.kt)("inlineCode",{parentName:"li"},"gVON"),"\uff080.001748565 ",(0,l.kt)("inlineCode",{parentName:"li"},"LAT"),"\uff09")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"\u5927\u578b\u5408\u7ea6\u793a\u4f8b"},"\u5927\u578b\u5408\u7ea6\u793a\u4f8b"),(0,l.kt)("h4",{id:"prc20\u6807\u51c6token\u5408\u7ea6"},"PRC20\u6807\u51c6token\u5408\u7ea6"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"EVM\u793a\u4f8b\u4ee3\u7801")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/PlatONnetwork/docs/tree/master/website/i18n/zh-CN/docusaurus-plugin-content-docs/current/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91.assets/token.sol"},"\u70b9\u51fb\u67e5\u770bPRC20\u6807\u51c6\u7684\u667a\u80fd\u5408\u7ea6")),(0,l.kt)("p",null,"\u5b57\u8282\u7801"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/PlatONnetwork/docs/tree/master/website/i18n/zh-CN/docusaurus-plugin-content-docs/current/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91.assets/Token_evm.bin"},"\u67e5\u770b\u5b57\u8282\u7801")),(0,l.kt)("p",null,"\u5b57\u8282\u5927\u5c0f\uff1a ",(0,l.kt)("inlineCode",{parentName:"p"},"4557.5 byte => 4.45 kb")),(0,l.kt)("hr",null),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"WASM\u793a\u4f8b\u4ee3\u7801")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'#include <platon/platon.hpp>\n#include <string>\nusing namespace platon;\n\nclass Token {\n    public:\n        // total amount of tokens\n        platon::StorageType<"totalsupply"_n, uint64_t> totalSupply;\n    \n    public: // event\n        // define: _from, _to, _value\n        PLATON_EVENT2(Transfer, Address, Address, uint64_t);\n        // define: _owner, _spender, _value\n        PLATON_EVENT2(Approval, Address, Address, uint64_t);\n\n    public:\n        // @param _owner The address from which the balance will be retrieved\n        // @return The balance.\n        virtual uint64_t balanceOf(Address _owner) = 0;\n\n        // @notice send \'_value\' token to `_to` from `msg.sender`\n        // @param _to THe address of the recipient.\n        // @param _value The amount of token to be transferred.\n        // @return Whether the transfer was successful or not.\n        virtual bool transfer(Address _to, uint64_t _value) = 0;\n\n        // @notice send `_value` token to `_to` from `_from` on the condition it is approved by `_from`\n        // @param _from The address of the sender.\n        // @param _to The address of the recepient.\n        // @param _value The amount of token to be transferred.\n        // @return Whether the transfer was successful or not.\n        virtual bool transferFrom(Address _from, Address _to, uint64_t _value) = 0;\n\n        // @notice `msg.sender` approves `_spender` to spend `_value` tokens\n        // @param _spender The address of the account able to transfer the tokens\n        // @param _value The amount of tokens to be approved for transfer\n        // @return Whether thee approval was successful or not.\n        virtual bool approve(Address _spender, uint64_t _value) = 0;\n\n        // @param _owner The address of the account owning tokens\n        // @param _spender The address of the account able to transfer the tokens\n        // @return Amount of remaining tokens allowed to spent.\n        virtual uint64_t allowance(Address _owner, Address _spender) = 0;\n};\n\n// You should inherit from StandardTOken or, for a token like you would want\n// to deploy in something like MIst, see HumanStandardToken.cpp.\n// (This implements ONLY the standard functions and NOTHING else.\n// If you deploy this, you won\'t have anthing useful.)\nclass StandardToken: public Token\n{\n    protected: \n        platon::db::Map<"balances"_n, Address, uint64_t> balances;\n        platon::db::Map<"allowed"_n, std::pair<Address, Address>, uint64_t> allowed;\n\n    public:\n        CONST uint64_t balanceOf(Address _owner) {\n            return balances[_owner];        \n        }\n\n        ACTION bool transfer(Address _to, uint64_t _value){\n            // Default assumes totalSupply can\'t be over max(2^64 - 1)\n            // If your token leaves out totalSupply and can issue more tokens as time goes on,\n            // you need to check if it doesn\'t wrap.\n            // Replace the if with this on instead.\n            Address sender = platon_caller();\n            if (balances[sender] >= _value && _value > 0) {\n                balances[sender] -= _value;\n                balances[_to] += _value;\n                PLATON_EMIT_EVENT2(Transfer, sender, _to, _value);\n                return true;\n            } else {\n                return false;           \n            }\n        }\n\n        ACTION bool transferFrom(Address _from, Address _to, uint64_t _value) {\n            // same as above. Replace this line with the following if you want to protect against\n            // wrapping uints.\n            Address sender = platon_caller();\n            auto key = std::make_pair(_from, sender);\n            if(balances[_from] >= _value && allowed[key] >= _value && _value > 0){\n                balances[_to] += _value;\n                balances[_from] -= _value;\n                allowed[key] -= _value;\n                PLATON_EMIT_EVENT2(Transfer, _from, _to, _value);\n                return true;\n            } else {\n                return false;           \n            }\n        }\n\n        ACTION bool approve(Address _spender, uint64_t _value){\n            Address sender = platon_caller();           \n            auto key = std::make_pair(sender, _spender);\n            allowed[key] = _value;\n            PLATON_EMIT_EVENT2(Approval, sender, _spender, _value);\n            return true;        \n        }\n\n        CONST uint64_t allowance(Address _owner, Address _spender){\n            auto key = std::make_pair(_owner, _spender);\n            return allowed[key];        \n        }\n};\n\n\nCONTRACT LATToken: public platon::Contract, public StandardToken\n{\n    \n    public:\n        platon::StorageType<"name"_n, std::string> name;        // fancy name: eg PlatON Token\n        platon::StorageType<"decimals"_n, uint8_t> decimals;    // HOw many decimals to show.\n        platon::StorageType<"symbol"_n, std::string> symbol;    // An identifier: eg LTT\n        platon::StorageType<"version"_n, std::string> version;  // 0.1 standard. Just an arbitrary versioning scheme.\n\n    public:\n        ACTION void init(uint64_t _initialAmount, const std::string& _tokenName,\n            uint8_t _decimalUnits, const std::string& _tokenSymbol)\n        {\n            Address sender = platon_caller();\n            balances[sender] = _initialAmount;      // Give the creator all initial tokens.\n            totalSupply.self() = _initialAmount;            // Update total supply.\n            name.self() = _tokenName;                       // Set the name for display purposes\n            decimals.self() = _decimalUnits;                // Amount of decimals for display purposes\n            symbol.self() = _tokenSymbol;                   // Set the symbol for display purposes.\n        }\n\n        CONST std::string getName(){\n            return name.self();     \n        }\n\n        CONST uint8_t getDecimals(){\n            return decimals.self();     \n        }\n\n        CONST std::string getSymbol(){\n            return symbol.self();       \n        }\n\n        CONST uint64_t getTotalSupply(){\n            return totalSupply.self();      \n        }\n        \n        // Approves and then calls the receiving contract.\n        ACTION bool approveAndCall(Address _spender, uint64_t _value, const bytes& _extraData) {\n            Address sender = platon_caller();\n            auto key = std::make_pair(sender, _spender);\n            allowed[key] = _value;\n            PLATON_EMIT_EVENT2(Approval, sender, _spender, _value);\n            // call the receiveApproval function on the contract you want to be notified. This \n            // crafts the function signature manually so one doesn\'t have to include a contract \n            // in here just for this.\n            // define: receiveApproval(Address _from, uint64_t _value, Address _tokenContract, bytes& _extraDaa)\n            // it is assumed that when does this that the call should succeed.\n            return true;\n        }\n};\n\nPLATON_DISPATCH(LATToken,(init)(balanceOf)(transfer)(transferFrom)(approve)(allowance)\n(getName)(getDecimals)(getSymbol)(getTotalSupply)(approveAndCall))\n')),(0,l.kt)("p",null,"\u5b57\u8282\u7801"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/PlatONnetwork/docs/tree/master/website/i18n/zh-CN/docusaurus-plugin-content-docs/current/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91.assets/Token_wasm.bin"},"\u67e5\u770b\u5b57\u8282\u7801")),(0,l.kt)("p",null,"\u5b57\u8282\u5927\u5c0f\uff1a ",(0,l.kt)("inlineCode",{parentName:"p"},"36764 byte => 35.9 kb")),(0,l.kt)("hr",null),(0,l.kt)("h6",{id:"\u521b\u5efa\u90e8\u7f72\u5408\u7ea6\u6210\u672c-2"},"\u521b\u5efa&\u90e8\u7f72\u5408\u7ea6\u6210\u672c"),(0,l.kt)("p",null,"PlatON-EVM"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Gas\u6d88\u8017: 552823"),(0,l.kt)("li",{parentName:"ul"},"Gas\u5355\u4ef7: 5,000,000,000 (5 ",(0,l.kt)("inlineCode",{parentName:"li"},"gVON"),")"),(0,l.kt)("li",{parentName:"ul"},"\u603b\u6210\u672c:  2764115 ",(0,l.kt)("inlineCode",{parentName:"li"},"gVON"),"\uff080.002764115 ",(0,l.kt)("inlineCode",{parentName:"li"},"LAT"),"\uff09")),(0,l.kt)("p",null,"\u4ee5\u592a\u574a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Gas\u6d88\u8017: 1282171"),(0,l.kt)("li",{parentName:"ul"},"Gas\u5355\u4ef7: 5,000,000,000 (5 ",(0,l.kt)("inlineCode",{parentName:"li"},"Gwei"),")"),(0,l.kt)("li",{parentName:"ul"},"\u603b\u6210\u672c:  6410855 ",(0,l.kt)("inlineCode",{parentName:"li"},"Gwei"),"\uff080.006410855 ",(0,l.kt)("inlineCode",{parentName:"li"},"ETH"),"\uff09")),(0,l.kt)("p",null,"PlatON-WASM"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Gas\u6d88\u8017: 486274"),(0,l.kt)("li",{parentName:"ul"},"Gas\u5355\u4ef7: 5,000,000,000 (5 ",(0,l.kt)("inlineCode",{parentName:"li"},"gVON"),")"),(0,l.kt)("li",{parentName:"ul"},"\u603b\u6210\u672c:  2431370 ",(0,l.kt)("inlineCode",{parentName:"li"},"gVON"),"\uff080.00243137 ",(0,l.kt)("inlineCode",{parentName:"li"},"LAT"),"\uff09")),(0,l.kt)("hr",null))}m.isMDXComponent=!0}}]);