"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6072],{5788:(e,n,r)=>{r.d(n,{Iu:()=>l,yg:()=>y});var t=r(1504);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function c(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function o(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var d=t.createContext({}),s=function(e){var n=t.useContext(d),r=n;return e&&(r="function"==typeof e?e(n):c(c({},n),e)),r},l=function(e){var n=s(e.components);return t.createElement(d.Provider,{value:n},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},g=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,i=e.originalType,d=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),p=s(r),g=a,y=p["".concat(d,".").concat(g)]||p[g]||u[g]||i;return r?t.createElement(y,c(c({ref:n},l),{},{components:r})):t.createElement(y,c({ref:n},l))}));function y(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=r.length,c=new Array(i);c[0]=g;var o={};for(var d in n)hasOwnProperty.call(n,d)&&(o[d]=n[d]);o.originalType=e,o[p]="string"==typeof e?e:a,c[1]=o;for(var s=2;s<i;s++)c[s]=r[s];return t.createElement.apply(null,c)}return t.createElement.apply(null,r)}g.displayName="MDXCreateElement"},1064:(e,n,r)=>{r.r(n),r.d(n,{contentTitle:()=>c,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var t=r(5072),a=(r(1504),r(5788));const i={id:"adapting_to_new_chainid",title:"\u9002\u914d\u65b0\u94feID\u6559\u7a0b",sidebar_label:"\u9002\u914d\u65b0\u94feID\u6559\u7a0b"},c=void 0,o={unversionedId:"adapting_to_new_chainid",id:"adapting_to_new_chainid",isDocsHomePage:!1,title:"\u9002\u914d\u65b0\u94feID\u6559\u7a0b",description:"\u65b0\u5e94\u7528\u5982\u4f55\u9002\u914dPlatON\u65b0\u94feID",source:"@site/i18n/zh-CN/docusaurus-plugin-content-docs/current/\u9002\u914d\u65b0\u94feID\u6559\u7a0b.md",sourceDirName:".",slug:"/adapting_to_new_chainid",permalink:"/docs/zh-CN/adapting_to_new_chainid",editUrl:"https://github.com/PlatONnetwork/docs/tree/master/website/i18n/zh-CN/docusaurus-plugin-content-docs/current/\u9002\u914d\u65b0\u94feID\u6559\u7a0b.md",version:"current",frontMatter:{id:"adapting_to_new_chainid",title:"\u9002\u914d\u65b0\u94feID\u6559\u7a0b",sidebar_label:"\u9002\u914d\u65b0\u94feID\u6559\u7a0b"}},d=[{value:"\u65b0\u5e94\u7528\u5982\u4f55\u9002\u914dPlatON\u65b0\u94feID",id:"\u65b0\u5e94\u7528\u5982\u4f55\u9002\u914dplaton\u65b0\u94feid",children:[{value:"PRC20 \u4ee3\u5e01permit\u65b9\u6cd5",id:"prc20-\u4ee3\u5e01permit\u65b9\u6cd5",children:[]},{value:"\u6cbb\u7406\u4ee3\u5e01\u6295\u7968\u6743\u59d4\u6258",id:"\u6cbb\u7406\u4ee3\u5e01\u6295\u7968\u6743\u59d4\u6258",children:[]}]}],s={toc:d},l="wrapper";function p(e){let{components:n,...r}=e;return(0,a.yg)(l,(0,t.c)({},s,r,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h2",{id:"\u65b0\u5e94\u7528\u5982\u4f55\u9002\u914dplaton\u65b0\u94feid"},"\u65b0\u5e94\u7528\u5982\u4f55\u9002\u914dPlatON\u65b0\u94feID"),(0,a.yg)("p",null,"PlatON\u4e3b\u7f51\u5173\u4e8e\u652f\u6301\u65b0\u94feID\u7684\u63d0\u6848",(0,a.yg)("a",{parentName:"p",href:"https://github.com/PlatONnetwork/PIPs/blob/master/PIPs/PIP-7.md"},"PIP-7"),"\u5df2\u7ecf\u83b7\u5f97\u901a\u8fc7\uff0c\u5e76\u4e14\u7b2c\u4e00\u9636\u6bb5\u5df2\u7ecf\u5728\u4e3b\u7f51\u5b9e\u65bd\uff0c\u8fd9\u610f\u5473\u7740PlatON\u4e3b\u7f51\u7684ChainId\u5c06\u4f1a\u4ece100 \u9010\u6b65\u5207\u6362\u5230\u65b0\u503c210425\uff0c\u4e3a\u4e86\u5c3d\u91cf\u51cf\u5c11\u5e94\u7528\u5728\u540e\u7eed\u7248\u672c\u5347\u7ea7\u8fc7\u7a0b\u4e2d\u7684\u5f71\u54cd\uff0c\u65b0\u5e94\u7528\u5e94\u5c3d\u91cf\u4ece\u4e00\u5f00\u59cb\u5c31\u652f\u6301\u65b0\u7684ChainId\u3002"),(0,a.yg)("p",null,"\u4f46\u662f\u73b0\u9636\u6bb5PlatON EVM\u865a\u62df\u673a\u8fd4\u56de\u7ed9\u5408\u7ea6\u7684ChainId\u8fd8\u662f100\uff08\u4e4b\u540e\u4f1a\u8fd4\u56de210425\uff09\uff0c\u6240\u4ee5\u5728\u5f00\u53d1\u5e94\u7528\u7684\u8fc7\u7a0b\u4e2d\u5982\u679c\u6709\u4e0e\u94feID\u6709\u5173\u7684\u903b\u8f91\u9700\u8981\u505a\u7279\u522b\u7684\u9002\u914d\uff0c\u4e0b\u6587\u7684\u5b9e\u4f8b\u5c06\u4ece\u4e24\u4e2a\u573a\u666f\u6765\u4ecb\u7ecd\u9002\u914d\u7684\u5730\u65b9\uff0c\u7b2c\u4e00\u4e2a\u662fPRC20 \u4ee3\u5e01permit\u65b9\u6cd5\uff0c\u7b2c\u4e8c\u4e2a\u6cbb\u7406\u4ee3\u5e01\u7684\u6295\u7968\u6743\u59d4\u6258\u3002"),(0,a.yg)("h3",{id:"prc20-\u4ee3\u5e01permit\u65b9\u6cd5"},"PRC20 \u4ee3\u5e01permit\u65b9\u6cd5"),(0,a.yg)("p",null,"\u901a\u5e38Swap\u5728\u6bcf\u6b21\u79fb\u9664\u6d41\u52a8\u6027\u7684\u65f6\u5019\uff0c\u9700\u8981\u5148\u4f7f\u7528metamask\u7684eth_signTypedData_v4\u63a5\u53e3\u5728\u5ba2\u6237\u7aef\u7b7e\u540d\uff08\u7b7e\u540d\u5185\u5bb9\u5305\u542bChainId\uff09\uff0c\u7136\u540e\u4f7f\u7528\u7b7e\u540d\u4f5c\u4e3a\u53c2\u6570\u8c03\u7528router\u5408\u7ea6\u7684removeLiquidityWithPermit\uff0c\u7b7e\u540d\u662f\u7528\u6765\u505aPRC20\u5408\u7ea6\u7684permit\uff08\u5141\u8bb8\u5408\u7ea6\u6263\u7528\u6237\u7684PRC20\u8d44\u4ea7\uff09"),(0,a.yg)("p",null,"\u9002\u914d\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a"),(0,a.yg)("p",null,"constructor()\u51fd\u6570\u589e\u52a0DOMAIN_SEPARATOR_NEW\uff0c\u751f\u6210\u65b9\u6cd5\u5305\u542b210425\u7684ChainId"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"......\nDOMAIN_SEPARATOR = keccak256(\n    abi.encode(\n        keccak256('EIP712Domain(string name,string version,uint256 ChainId,address verifyingContract)'),\n        keccak256(bytes(name)),\n        keccak256(bytes('1')),\n        ChainId,\n        address(this)\n    )\n);\nDOMAIN_SEPARATOR_NEW = keccak256(\n    abi.encode(\n        keccak256('EIP712Domain(string name,string version,uint256 ChainId,address verifyingContract)'),\n        keccak256(bytes(name)),\n        keccak256(bytes('1')),\n        210425,\n        address(this)\n    )\n);\n......\n")),(0,a.yg)("p",null,"permit\u51fd\u6570\u589e\u52a0\u5bf9\u4e8e\u4e24\u4e2aChainId\u76f8\u5173\u7b7e\u540d\u7684\u9a8c\u8bc1"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"require(deadline >= block.timestamp, 'EXPIRED');\nbytes32 digest = keccak256(\n    abi.encodePacked(\n        '\\x19\\x01',\n        DOMAIN_SEPARATOR_NEW,\n        keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner], deadline))\n    )\n);\naddress recoveredAddress = ecrecover(digest, v, r, s);\nif (recoveredAddress == address(0) || recoveredAddress != owner) {\n    digest = keccak256(\n        abi.encodePacked(\n            '\\x19\\x01',\n            DOMAIN_SEPARATOR,\n            keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner], deadline))\n        )\n    );\n    recoveredAddress = ecrecover(digest, v, r, s);\n    require(recoveredAddress != address(0) && recoveredAddress == owner, 'INVALID_SIGNATURE');\n}\n\nnonces[owner] += 1;\n......\n")),(0,a.yg)("h3",{id:"\u6cbb\u7406\u4ee3\u5e01\u6295\u7968\u6743\u59d4\u6258"},"\u6cbb\u7406\u4ee3\u5e01\u6295\u7968\u6743\u59d4\u6258"),(0,a.yg)("p",null,"\u6cbb\u7406\u4ee3\u5e01\u6295\u7968\u6743\u59d4\u6258\u7684\u65f6\u5019\u4e5f\u7528\u5230\u4e86\u7c7b\u4f3c\u7684\u7b7e\u540d\u548c\u9a8c\u8bc1\u903b\u8f91\u3002\u4ee3\u7801\u4fee\u6539\u5982\u4e0b\uff1a"),(0,a.yg)("p",null,"delegateBySig\u51fd\u6570\u589e\u52a0\u5bf9\u4e8e\u4e24\u4e2aChainId\u76f8\u5173\u7b7e\u540d\u7684\u9a8c\u8bc1"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},'constructor(address account, address minter_) public {\n        ......\n        DOMAIN_SEPARATOR = keccak256(abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainId(), address(this)));\n        DOMAIN_SEPARATOR_NEW = keccak256(abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), 210425, address(this)));\n}\n    \n......\n\nfunction delegateBySig(address delegatee, uint nonce, uint expiry, uint8 v, bytes32 r, bytes32 s) public {\n    bytes32 structHash = keccak256(abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry));\n    bytes32 digest = keccak256(abi.encodePacked("\\x19\\x01", DOMAIN_SEPARATOR_NEW, structHash));\n    address signatory = ecrecover(digest, v, r, s);\n    if (signatory == address(0) || nonce != nonces[signatory]) {\n        digest = keccak256(abi.encodePacked("\\x19\\x01", DOMAIN_SEPARATOR, structHash));\n        signatory = ecrecover(digest, v, r, s);\n        require(signatory != address(0), "delegateBySig: invalid signature");\n        require(nonce == nonces[signatory], "delegateBySig: invalid nonce");\n    }\n    nonces[signatory] += 1;\n    require(now <= expiry, "delegateBySig: signature expired");\n    return _delegate(signatory, delegatee);\n}\n')))}p.isMDXComponent=!0}}]);